% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matrix.R
\name{write_matrix_dir}
\alias{write_matrix_dir}
\title{Make an integer sparse matrix object in binary files within a directory}
\usage{
write_matrix_dir(mat, dir, compress = TRUE, buffer_size = 8192L)
}
\arguments{
\item{dir}{Directory to save the data into}

\item{compress}{Whether or not to compress the data.}

\item{buffer_size}{For performance tuning only. The number of items to be buffered
in memory before calling writes to disk.}
}
\value{
MatrixDir object
}
\description{
Make an integer sparse matrix object in binary files within a directory
}
\details{
This function will convert row major storage orders to column major,
which will usually require 2 extra passes over the data.

For typical RNA counts matrices, which are unsigned integer matrices
(type uint32_t), this function will result in 6-8x less space than an R dgCMatrix,
and 4-6x smaller than a scipy csc_matrix. The compression will be more effective when
the count values in the matrix are small, and when the rows of the matrix are
sorted by rowMeans. In tests on RNA-seq data optimal ordering could save up to
40\% of storage space. On non-integer data only the row indices are compressed,
not the values themselves so space savings will be smaller.

Note: this function will not perform automatic conversions to non-negative
integer matrices, so use the function \code{convert_matrix_type_uint32_t} first if high-efficiency
compression is desired.
}
