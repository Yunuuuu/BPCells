[{"path":"https://bnprks.github.io/BPCells/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Benjamin Parks. Author, maintainer.","code":""},{"path":"https://bnprks.github.io/BPCells/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Parks B (2022). BPCells: Single Cell Counts Matrices PCA. https://bnprks.github.io/BPCells, https://github.com/bnprks/BPCells.","code":"@Manual{,   title = {BPCells: Single Cell Counts Matrices to PCA},   author = {Benjamin Parks},   year = {2022},   note = {https://bnprks.github.io/BPCells, https://github.com/bnprks/BPCells}, }"},{"path":"https://bnprks.github.io/BPCells/index.html","id":"bpcells","dir":"","previous_headings":"","what":"Single Cell Counts Matrices to PCA","title":"Single Cell Counts Matrices to PCA","text":"BPCells package high performance single cell analysis. designed cover processing pipeline ATAC fragments RNA counts matrices normalization, basic QC, PCA. Three key distinguishing features allow high performance BPCells : Bit-packing compression allow extremely compact storage fragments counts matrices -disk memory. C++ code operates data streaming fashion support low memory usage efficient use CPU cache. Matrix-free SVD solvers combination implicit normalization calculations support computing PCA normalized matrix ever storing original counts matrix memory.","code":""},{"path":"https://bnprks.github.io/BPCells/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Single Cell Counts Matrices to PCA","text":"BPCells easiest install directly github: installing, must HDF5 library installed system. HDF5 can installed choice package manager: conda: conda install -c anaconda hdf5 apt: sudo apt-get install libhdf5-dev yum: yum install hdf5-devel","code":"devtools::install_github(\"bnprks/BPCells\")"},{"path":"https://bnprks.github.io/BPCells/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Single Cell Counts Matrices to PCA","text":"Two key principles understand using BPCells operations streaming lazy. Streaming means minimal amount data stored memory computation happening. almost memory used storing intermediate results. Hence, can compute operations large matrices without ever loading memory. Lazy means real work performed matrix fragment objects result needs returned R object written disk. helps support streaming computation, since otherwise forced compute intermediate results use additional memory.","code":""},{"path":"https://bnprks.github.io/BPCells/index.html","id":"basic-usage","dir":"","previous_headings":"Getting started","what":"Basic usage","title":"Single Cell Counts Matrices to PCA","text":"begin basic example loading ATAC fragments 10x fragments file, reading peak set bed file, calculating cell x peak matrix.","code":"library(\"BPCells\")  # File reading is lazy, so this is instantaneous fragments <- open_fragments_10x(\"atac_fragments.tsv.gz\")  # This is when we actually read the file, should take 1-2 minutes to scan # since we bottleneck on gzip decompression. packed_fragments <- write_fragments_memory(fragments)  # Important to set compress=FALSE for speed. Should take a few seconds saveRDS(packed_fragments, \"fragments.rds\", compress=FALSE)  # Reloading from disk is only a few seconds now. packed_fragments <- readRDS(\"fragments.rds\")  peaks <- read_bed(\"peaks.bed\")  # This is fast because the peak matrix calculation is lazy. # It will be computed on-the-fly when we actually need results from it. peak_matrix <- peak_matrix(packed_fragments, peaks)  # Here is where the peak matrix calculation happens. Should take # under 10 seconds. R_matrix <- as(peak_matrix, \"dgCMatrix\")"},{"path":"https://bnprks.github.io/BPCells/index.html","id":"streaming-operations","dir":"","previous_headings":"Getting started","what":"Streaming operations","title":"Single Cell Counts Matrices to PCA","text":"lazy, stream-oriented design means can calculate complicated transformations single pass. faster memory-efficient calculating several intermediate results sequential manner. example, perform following pipeline: 1. Exclude fragments non-standard chromosomes 2. Subset cells 3. Add Tn5 offset 4. Calculate peak matrix 5. Calculate mean-accessibility per peak done using e.g. GRanges sparse matrices, need 3 passes fragments saving intermediate results, 2 passes peak matrix. BPCell’s streaming operations, can done directly fragments single pass, memory usage limited bytes per cell iterating peak matrix returning colMeans. Note knew cell names ahead time, even perform operation directly orignal 10x fragments without ever saving fragments memory. fairly slow 10x fragment files slow decompress. upcoming support storing packed fragments directly disk, can become much faster operation without ever needing store fragments memory.","code":"# Here I make use of the pipe operator (%>%) for better readability library(\"tidyverse\")  # We'll subset to just the standard chromosomes standard_chr <- which(   stringr::str_detect(chrNames(packed_fragments), \"^chr[0-9XY]+$\") )  # Pick a random subset of 100 cells to consider set.seed(1337) keeper_cells <- sample(cellNames(packed_fragments), 100)  # Run the pipeline, and save the average accessibility per peak peak_accessibility <- packed_fragments %>%   select_chromosomes(standard_chr) %>%   select_cells(keeper_cells) %>%   shift_fragments(shift_start=4, shift_end=-5) %>%   peak_matrix(peaks) %>%   colMeans()"},{"path":[]},{"path":"https://bnprks.github.io/BPCells/index.html","id":"current-support","dir":"","previous_headings":"Roadmap","what":"Current support:","title":"Single Cell Counts Matrices to PCA","text":"Reading/writing 10x fragment files disk Reading/writing packed fragment objects memory directly disk Interconversion fragments objects GRanges Calculation Cell x Peak matrices Conversion /R sparse matrices Read-write access 10x hdf5 feature matrices, read-access AnnData files, Reading/writing packed sparse matrices memory directly disk Multiplication dense matrices vectors Calculation statistics like rowSums, colSums, rowMeans, colMeans Transparent handling vector +, -, *, /, log1p streaming normalization. allows implementation ATAC-seq LSI Seurat default normalization.","code":""},{"path":"https://bnprks.github.io/BPCells/index.html","id":"upcoming-additions","dir":"","previous_headings":"Roadmap","what":"Upcoming additions:","title":"Single Cell Counts Matrices to PCA","text":"Read fragments bam files Support direct download files URLs Write hdf5 AnnData matrices sctransform normalization","code":""},{"path":"https://bnprks.github.io/BPCells/index.html","id":"performance-estimates","dir":"","previous_headings":"Roadmap","what":"Performance estimates","title":"Single Cell Counts Matrices to PCA","text":"Packed fragments 2x smaller ArchR fragments gzipped 10x fragment files Packed fragments can decompressed >5GB/s, decoding disk-limited SSDs RAID arrays remaining competitive reading directly uncompressed RAM Packed matrices 4-6x smaller equivalent sparse matrices, similarly excellent decompression speed. (Note: compared R dgCMatrices, numbers like 6-8x smaller due dgCMatrices always storing double-precision floats) Fragment import speed 10-fold faster Peak tile matrix calculations 10-fold faster ArchR BPCells usually uses less memory ArchR, though ArchR’s memory usage never excessive Compared Seurat/Scanpy’s default normalization + PCA, BPCells can nearly 100x memory efficient large datasets (1M cells), even subsetting just 2,000 genes. time PCA calculation faster Seurat, 2x slower Scanpy (BPCells) takes 5 minutes run PCA 1M cell matrix Compared Seurat’s default normalization + PCA, BPCells likely 10x efficient memory CPU. unclear multiply 4-6x memory savings bitpacking counts matrices. LSI expected substantially faster ArchR, although C++ implementation may provide several-fold speedup, bitpacking provide 4-6x memory savings.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/IterableFragments-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"IterableFragments methods — IterableFragments-methods","title":"IterableFragments methods — IterableFragments-methods","text":"Methods IterableFragments objects","code":""},{"path":"https://bnprks.github.io/BPCells/reference/IterableFragments-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IterableFragments methods — IterableFragments-methods","text":"","code":"# S4 method for IterableFragments show(object)  cellNames(x)  cellNames(x, ...) <- value  chrNames(x)  chrNames(x, ...) <- value"},{"path":"https://bnprks.github.io/BPCells/reference/IterableFragments-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"IterableFragments methods — IterableFragments-methods","text":"object IterableFragments object x IterableFragments object value Character vector new names","code":""},{"path":"https://bnprks.github.io/BPCells/reference/IterableFragments-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"IterableFragments methods — IterableFragments-methods","text":"cellNames() Character vector cell names, NULL none known chrNames(): Character vector chromosome names, NULL none known","code":""},{"path":"https://bnprks.github.io/BPCells/reference/IterableFragments-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"IterableFragments methods — IterableFragments-methods","text":"cellNames<- possible replace names, add new names. chrNames<- possible replace names, add new names.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/IterableFragments-methods.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"IterableFragments methods — IterableFragments-methods","text":"show,IterableFragments-method: Print IterableFragments cellNames: Get cell names cellNames<-: Set cell names chrNames: Set chromosome names chrNames<-: Set chromosome names","code":""},{"path":"https://bnprks.github.io/BPCells/reference/IterableMatrix-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"IterableMatrix methods — IterableMatrix-methods","title":"IterableMatrix methods — IterableMatrix-methods","text":"Methods IterableMatrix objects","code":""},{"path":"https://bnprks.github.io/BPCells/reference/IterableMatrix-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IterableMatrix methods — IterableMatrix-methods","text":"","code":"# S4 method for IterableMatrix show(object)  # S4 method for IterableMatrix t(x)  # S4 method for IterableMatrix,matrix %*%(x, y)  # S4 method for IterableMatrix rowSums(x)  # S4 method for IterableMatrix colSums(x)  # S4 method for IterableMatrix rowMeans(x)  # S4 method for IterableMatrix colMeans(x)"},{"path":"https://bnprks.github.io/BPCells/reference/IterableMatrix-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"IterableMatrix methods — IterableMatrix-methods","text":"object IterableMatrix object x IterableMatrix object y matrix","code":""},{"path":"https://bnprks.github.io/BPCells/reference/IterableMatrix-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"IterableMatrix methods — IterableMatrix-methods","text":"t() Transposed object x %*% y: dense matrix result rowSums(): vector row sums colSums(): vector col sums rowMeans(): vector row means colMeans(): vector col means","code":""},{"path":"https://bnprks.github.io/BPCells/reference/IterableMatrix-methods.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"IterableMatrix methods — IterableMatrix-methods","text":"show,IterableMatrix-method: Display IterableMatrix t,IterableMatrix-method: Transpose IterableMatrix %*%,IterableMatrix,matrix-method: Multiply dense matrix rowSums,IterableMatrix-method: Calculate rowSums colSums,IterableMatrix-method: Calculate colSums rowMeans,IterableMatrix-method: Calculate rowMeans colMeans,IterableMatrix-method: Calculate colMeans","code":""},{"path":"https://bnprks.github.io/BPCells/reference/LinearOperator-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Represent a sparse matrix-vector product operation — LinearOperator-class","title":"Represent a sparse matrix-vector product operation — LinearOperator-class","text":"LinearOperators perform sparse matrix-vector product operations downstream matrix solvers. avoid repeatedly calling iterate_matrix SVD solver possible efficiency gain","code":""},{"path":"https://bnprks.github.io/BPCells/reference/XPtrList-class.html","id":null,"dir":"Reference","previous_headings":"","what":"This class is used to hold a list of external pointers. — XPtrList-class","title":"This class is used to hold a list of external pointers. — XPtrList-class","text":"class used hold list external pointers.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/call_peaks_tile.html","id":null,"dir":"Reference","previous_headings":"","what":"Call peaks from tiles — call_peaks_tile","title":"Call peaks from tiles — call_peaks_tile","text":"Calling peaks pre-set list tiles can much faster using dedicated peak-calling software like macs3. resulting peaks less precise terms exact coordinates, sufficient analyses.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/call_peaks_tile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call peaks from tiles — call_peaks_tile","text":"","code":"call_peaks_tile(   fragments,   chromosome_sizes,   cell_groups = rep.int(\"all\", length(cellNames(fragments))),   effective_genome_size = NULL,   peak_width = 200,   peak_tiling = 3,   fdr_cutoff = 0.01,   merge_peaks = c(\"all\", \"group\", \"none\") )"},{"path":"https://bnprks.github.io/BPCells/reference/call_peaks_tile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call peaks from tiles — call_peaks_tile","text":"fragments IterableFragments object chromosome_sizes genomic-ranges holding start end coordinates chromosome. See read_ucsc_chrom_sizes(). cell_groups Grouping vector one entry per cell fragments, e.g. cluster IDs effective_genome_size (Optional) effective genome size poisson background rate estimation. See (deeptools)https://deeptools.readthedocs.io/en/develop/content/feature/effectiveGenomeSize.html values common genomes. Defaults sum chromosome sizes, overestimates peak significance peak_width Width candidate peaks peak_tiling Number candidate peaks overlapping base genome. E.g. peak_width = 300 peak_tiling = 3 results candidate peaks 300bp spaced 100bp apart fdr_cutoff Adjusted p-value significance cutoff merge_peaks merge significant peaks merge_peaks_iterative() \"\" Merge full set peaks \"group\" Merge peaks within group \"none\" perform merging","code":""},{"path":"https://bnprks.github.io/BPCells/reference/call_peaks_tile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call peaks from tiles — call_peaks_tile","text":"tibble peak calls following columns: chr, start, end: genome coordinates group: group ID peak identified p_val, q_val: Poission p-value BH-corrected p-value enrichment: Enrichment counts peak compared genome-wide background","code":""},{"path":"https://bnprks.github.io/BPCells/reference/call_peaks_tile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Call peaks from tiles — call_peaks_tile","text":"Peak calling steps: Estimate genome-wide expected insertions per tile based peak_width, effective_genome_size, per-group read counts Tile genome nonoverlapping tiles size peak_width tile group, calculate p_value based Poisson model Compute adjusted p-values using BH method using total number tiles number hypotheses tested. Repeat steps 2-4 peak_tiling times, evenly spaced offsets merge_peaks 4. Within group, use merge_peaks_iterative() keep significant overlapping candidate peaks 5. merge_peaks == TRUE, perform final round merge_peaks_iterative(), prioritizing peak within-group significance rank","code":""},{"path":"https://bnprks.github.io/BPCells/reference/cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster an adjacency matrix — cluster_graph_leiden","title":"Cluster an adjacency matrix — cluster_graph_leiden","text":"Cluster adjacency matrix","code":""},{"path":"https://bnprks.github.io/BPCells/reference/cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster an adjacency matrix — cluster_graph_leiden","text":"","code":"cluster_graph_leiden(snn, resolution = 0.001, seed = 12531, ...)  cluster_graph_louvain(snn, resolution = 1, seed = 12531)  cluster_graph_seurat(snn, resolution = 0.8, ...)"},{"path":"https://bnprks.github.io/BPCells/reference/cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster an adjacency matrix — cluster_graph_leiden","text":"snn Symmetric adjacency matrix (dgCMatrix) output e.g. knn_to_snn_graph resolution Resolution parameter. Higher values result clusters seed Random seed clustering initialization ... Additional arguments underlying clustering function","code":""},{"path":"https://bnprks.github.io/BPCells/reference/cluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster an adjacency matrix — cluster_graph_leiden","text":"Factor vector containing cluster assignment cell.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/cluster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cluster an adjacency matrix — cluster_graph_leiden","text":"cluster_graph_leiden: Leiden graph clustering algorithm igraph::cluster_leiden() cluster_graph_louvain: Louvain graph clustering algorithm igraph::cluster_louvain() cluster_graph_seurat: Seurat's clustering algorithm Seurat::FindClusters()","code":""},{"path":"https://bnprks.github.io/BPCells/reference/cluster_membership_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert grouping vector to sparse matrix — cluster_membership_matrix","title":"Convert grouping vector to sparse matrix — cluster_membership_matrix","text":"Converts vector membership IDs sparse matrix","code":""},{"path":"https://bnprks.github.io/BPCells/reference/cluster_membership_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert grouping vector to sparse matrix — cluster_membership_matrix","text":"","code":"cluster_membership_matrix(groups, group_order = NULL)"},{"path":"https://bnprks.github.io/BPCells/reference/cluster_membership_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert grouping vector to sparse matrix — cluster_membership_matrix","text":"groups Vector one entry per cell, specifying cell's group group_order Optional vector listing ordering groups","code":""},{"path":"https://bnprks.github.io/BPCells/reference/cluster_membership_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert grouping vector to sparse matrix — cluster_membership_matrix","text":"cell x group matrix entry 1 cell given group","code":""},{"path":"https://bnprks.github.io/BPCells/reference/collect_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect features for plotting — collect_features","title":"Collect features for plotting — collect_features","text":"Helper function data features plot diverse set data sources.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/collect_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect features for plotting — collect_features","text":"","code":"collect_features(   source,   features = NULL,   gene_mapping = human_gene_mapping,   n = 1 )"},{"path":"https://bnprks.github.io/BPCells/reference/collect_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect features for plotting — collect_features","text":"source Matrix data frame pull features , vector feature values single feature. matrix, features must rows. features Character vector features names plot source vector. gene_mapping optional vector gene name matching match_gene_symbol(). Ignored source data frame. n Internal-use parameter marking number nested calls. used finding name \"source\" input variable caller's perspective","code":""},{"path":"https://bnprks.github.io/BPCells/reference/collect_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect features for plotting — collect_features","text":"Data frame one column feature requested","code":""},{"path":"https://bnprks.github.io/BPCells/reference/collect_features.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Collect features for plotting — collect_features","text":"source data.frame, features drawn columns. source matrix object (IterableMatrix, dgCMatrix, matrix), features drawn rows.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/concat_dimnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for rbind/cbind concatenating dimnames — concat_dimnames","title":"Helper function for rbind/cbind concatenating dimnames — concat_dimnames","text":"Helper function rbind/cbind concatenating dimnames","code":""},{"path":"https://bnprks.github.io/BPCells/reference/concat_dimnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for rbind/cbind concatenating dimnames — concat_dimnames","text":"","code":"concat_dimnames(x, y, len_x, len_y, warning_prefix, dim_type)"},{"path":"https://bnprks.github.io/BPCells/reference/convert_matrix_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the type of a matrix — convert_matrix_type","title":"Convert the type of a matrix — convert_matrix_type","text":"Convert type matrix","code":""},{"path":"https://bnprks.github.io/BPCells/reference/convert_matrix_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the type of a matrix — convert_matrix_type","text":"","code":"convert_matrix_type(matrix, type = c(\"uint32_t\", \"double\", \"float\"))"},{"path":"https://bnprks.github.io/BPCells/reference/convert_matrix_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the type of a matrix — convert_matrix_type","text":"matrix IterableMatrix object input type One uint32_t (unsigned 32-bit integer), float (32-bit real number), double (64-bit real number)","code":""},{"path":"https://bnprks.github.io/BPCells/reference/convert_matrix_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the type of a matrix — convert_matrix_type","text":"IterableMatrix object","code":""},{"path":"https://bnprks.github.io/BPCells/reference/convert_to_fragments.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a Fragments object from an R data frame or GRanges object — convert_to_fragments","title":"Build a Fragments object from an R data frame or GRanges object — convert_to_fragments","text":"Build Fragments object R data frame GRanges object","code":""},{"path":"https://bnprks.github.io/BPCells/reference/convert_to_fragments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a Fragments object from an R data frame or GRanges object — convert_to_fragments","text":"","code":"convert_to_fragments(x, zero_based_coords = !is(x, \"GRanges\"))"},{"path":"https://bnprks.github.io/BPCells/reference/convert_to_fragments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a Fragments object from an R data frame or GRanges object — convert_to_fragments","text":"x input GRanges, list data frame. Lists dataframes must chr, start, end, cell_id. GRanges must metadata column cell_id zero_based_coords Whether convert ranges 1-based end-inclusive coordinate system 0-based end-exclusive coordinate system. Defaults true GRanges false formats (see http://genome.ucsc.edu/blog/-ucsc-genome-browser-coordinate-counting-systems/)","code":""},{"path":"https://bnprks.github.io/BPCells/reference/convert_to_fragments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a Fragments object from an R data frame or GRanges object — convert_to_fragments","text":"UnpackedMemFragments object representing given fragments","code":""},{"path":"https://bnprks.github.io/BPCells/reference/coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Genomic coordinate systems — coordinates","title":"Genomic coordinate systems — coordinates","text":"Ranges genomic coordinates given chromosme, start, end coordinate. two main conventions coordinate systems: One-based, end-inclusive ranges first base chromosome numbered 1 last base range equal end coordinate e.g. 1-5 describes first 5 bases chromosome Used formats SAM, GTF Zero-based, end-exclusive ranges first base chromosome numbered 0 last base range one less end coordinate e.g. 0-5 describes first 5 bases chromosome Used formats BAM, BED Internally, BPCells uses zero-based, end-exclusive convention. However, converting /data types, BPCells perform automatic conversions conventions needed.","code":""},{"path":[]},{"path":"https://bnprks.github.io/BPCells/reference/discrete_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Discrete color palettes — discrete_palette","title":"Discrete color palettes — discrete_palette","text":"color palettes derived ArchR color palettes, provide large sets distinguishable colors","code":""},{"path":"https://bnprks.github.io/BPCells/reference/discrete_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Discrete color palettes — discrete_palette","text":"","code":"discrete_palette(name, n = 1)"},{"path":"https://bnprks.github.io/BPCells/reference/discrete_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Discrete color palettes — discrete_palette","text":"name Name color palette n Minimum number colors needed","code":""},{"path":"https://bnprks.github.io/BPCells/reference/discrete_palette.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Discrete color palettes — discrete_palette","text":"requested number colors large, new palette constructed via interpolation requested palette","code":""},{"path":"https://bnprks.github.io/BPCells/reference/distanceToNearestDirectional.html","id":null,"dir":"Reference","previous_headings":"","what":"Find signed distance to nearest genomic ranges — distanceToNearestDirectional","title":"Find signed distance to nearest genomic ranges — distanceToNearestDirectional","text":"Given set genomic ranges, find distance nearest neighbors upstream downstream.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/distanceToNearestDirectional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find signed distance to nearest genomic ranges — distanceToNearestDirectional","text":"","code":"distanceToNearestDirectional(ranges, addArchRBug = FALSE)"},{"path":"https://bnprks.github.io/BPCells/reference/distanceToNearestDirectional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find signed distance to nearest genomic ranges — distanceToNearestDirectional","text":"ranges GenomicRanges object addArchRBug boolean reproduce ArchR's bug incorrectly handles nested genes","code":""},{"path":"https://bnprks.github.io/BPCells/reference/distanceToNearestDirectional.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find signed distance to nearest genomic ranges — distanceToNearestDirectional","text":"2-column data.frame columns upstream downstream, containing distances nearest neighbor respective directions. ranges + * strand, distance calculated : upstream = max(start(range) - end(upstreamNeighbor), 0) downstream = max(start(downstreamNeighbor) - end(range), 0) ranges - strand, definition upstream downstream flipped. Note definition distance slightly different GRanges::distance, effectively assumes end-coordinates included range.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/draw_trackplot_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine ggplot track plots into an aligned grid.\nUses patchwork to perform the alignment — draw_trackplot_grid","title":"Combine ggplot track plots into an aligned grid.\nUses patchwork to perform the alignment — draw_trackplot_grid","text":"Combine ggplot track plots aligned grid. Uses patchwork perform alignment","code":""},{"path":"https://bnprks.github.io/BPCells/reference/draw_trackplot_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine ggplot track plots into an aligned grid.\nUses patchwork to perform the alignment — draw_trackplot_grid","text":"","code":"draw_trackplot_grid(   ...,   labels,   title = NULL,   heights = rep(1, length(plots)),   label_width = 0.2,   label_style = list(fontface = \"bold\", size = 4) )"},{"path":"https://bnprks.github.io/BPCells/reference/draw_trackplot_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine ggplot track plots into an aligned grid.\nUses patchwork to perform the alignment — draw_trackplot_grid","text":"... Plots order top bottom, generally plain ggplots. better accomodate many bulk tracks, patchwork objects contain multiple tracks also accepted. case, plot labels drawn attribute $patchwork$labels present, rather labels argument. labels Text labels display track title Text overarching title plot heights Relative heights component plot. suggested use 1 standard height pseudobulk track. label_width Fraction width used labels relative main track area label_style Arguments pass geom_text adjust label text style","code":""},{"path":"https://bnprks.github.io/BPCells/reference/draw_trackplot_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine ggplot track plots into an aligned grid.\nUses patchwork to perform the alignment — draw_trackplot_grid","text":"plot object aligned genome plots. aligned row text label, y-axis, plot body. relative height row given heights. shared title x-axis put top.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/ensure_downloaded.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a file with a custom timeout — ensure_downloaded","title":"Download a file with a custom timeout — ensure_downloaded","text":"Download file custom timeout","code":""},{"path":"https://bnprks.github.io/BPCells/reference/ensure_downloaded.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a file with a custom timeout — ensure_downloaded","text":"","code":"ensure_downloaded(path, backup_url, timeout)"},{"path":"https://bnprks.github.io/BPCells/reference/ensure_downloaded.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a file with a custom timeout — ensure_downloaded","text":"path Output path write file timeout timeout seconds url download ","code":""},{"path":"https://bnprks.github.io/BPCells/reference/extendGenomicRanges.html","id":null,"dir":"Reference","previous_headings":"","what":"Extend GenomicRanges in a strand-aware fashion. — extendGenomicRanges","title":"Extend GenomicRanges in a strand-aware fashion. — extendGenomicRanges","text":"Extend GenomicRanges strand-aware fashion.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/extendGenomicRanges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extend GenomicRanges in a strand-aware fashion. — extendGenomicRanges","text":"","code":"extendGenomicRanges(ranges, upstream = 0, downstream = 0)"},{"path":"https://bnprks.github.io/BPCells/reference/extendGenomicRanges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extend GenomicRanges in a strand-aware fashion. — extendGenomicRanges","text":"ranges GenomicRanges object upstream Number bases extend range upstream (negative shrink width) downstream Number bases extend range downstream (negative shrink width)","code":""},{"path":"https://bnprks.github.io/BPCells/reference/extendGenomicRanges.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extend GenomicRanges in a strand-aware fashion. — extendGenomicRanges","text":"Note ranges blocked extending past base 1, maximum","code":""},{"path":"https://bnprks.github.io/BPCells/reference/extend_ranges.html","id":null,"dir":"Reference","previous_headings":"","what":"Extend genome ranges in a strand-aware fashion. — extend_ranges","title":"Extend genome ranges in a strand-aware fashion. — extend_ranges","text":"Extend genome ranges strand-aware fashion.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/extend_ranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extend genome ranges in a strand-aware fashion. — extend_ranges","text":"","code":"extend_ranges(   ranges,   upstream = 0,   downstream = 0,   metadata_cols = c(\"strand\"),   chromosome_sizes = NULL,   zero_based_coords = !is(ranges, \"GRanges\") )"},{"path":"https://bnprks.github.io/BPCells/reference/extend_ranges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extend genome ranges in a strand-aware fashion. — extend_ranges","text":"ranges List, GRanges, data.frame object. Must start, end, chr defined. See genomic-ranges upstream Number bases extend range upstream (negative shrink width) downstream Number bases extend range downstream (negative shrink width) metadata_cols Optional list metadata columns require & extract chromosome_sizes (optional) Size chromosomes genomic-ranges object zero_based_coords true, coordinates start 0 end coordinate included range. false, coordinates start 1 end coordinate included range","code":""},{"path":"https://bnprks.github.io/BPCells/reference/extend_ranges.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extend genome ranges in a strand-aware fashion. — extend_ranges","text":"Note ranges blocked extending past beginning chromosome (base 0), chromosome_sizes given also blocked extending past end chromosome","code":""},{"path":"https://bnprks.github.io/BPCells/reference/footprint.html","id":null,"dir":"Reference","previous_headings":"","what":"Get footprints around a set of genomic coordinates — footprint","title":"Get footprints around a set of genomic coordinates — footprint","text":"Get footprints around set genomic coordinates","code":""},{"path":"https://bnprks.github.io/BPCells/reference/footprint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get footprints around a set of genomic coordinates — footprint","text":"","code":"footprint(   fragments,   ranges,   zero_based_coords = !is(ranges, \"GRanges\"),   cell_groups = rlang::rep_along(cellNames(fragments), \"all\"),   cell_weights = rlang::rep_along(cell_groups, 1),   flank = 125L,   normalization_width = flank%/%10L )"},{"path":"https://bnprks.github.io/BPCells/reference/footprint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get footprints around a set of genomic coordinates — footprint","text":"fragments IterableFragments object ranges GRanges object positions footprint, list/data frame columns chr, start, & end. list/data frame, must include strand information character vector \"+\"/\"-\", TRUE/FALSE positive/negative strand. \"+\" strand motifs footprint around start coordinate, \"-\" strand motifs footprint around end coordinate zero_based_coords true, coordinates start 0 end coordinate included range. false, coordinates start 1 end coordinate included range cell_groups Character factor assigning group cell, order cellNames(fragments) cell_weights Numeric vector assigning weight factors (e.g. inverse total reads) cell, order cellNames(fragments) flank Number flanking basepairs include either side motif normalization_width Number basepairs upstream + downstream extremes use calculating enrichment","code":""},{"path":"https://bnprks.github.io/BPCells/reference/footprint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get footprints around a set of genomic coordinates — footprint","text":"tibble columns \"group\", \"position\", \"count\", \"enrichment\"","code":""},{"path":"https://bnprks.github.io/BPCells/reference/fragment_io.html","id":null,"dir":"Reference","previous_headings":"","what":"Read/write BPCells fragment objects — write_fragments_memory","title":"Read/write BPCells fragment objects — write_fragments_memory","text":"BPCells fragments can read/written compressed (bitpacked) uncompressed form variety storage locations: memory (R object), hdf5 file, directory disk (containing binary files).","code":""},{"path":"https://bnprks.github.io/BPCells/reference/fragment_io.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read/write BPCells fragment objects — write_fragments_memory","text":"","code":"write_fragments_memory(fragments, compress = TRUE)  write_fragments_dir(fragments, dir, compress = TRUE, buffer_size = 1024L)  open_fragments_dir(dir, buffer_size = 1024L)  write_fragments_hdf5(   fragments,   path,   group = \"fragments\",   compress = TRUE,   buffer_size = 8192L,   chunk_size = 1024L )  open_fragments_hdf5(path, group = \"fragments\", buffer_size = 16384L)"},{"path":"https://bnprks.github.io/BPCells/reference/fragment_io.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read/write BPCells fragment objects — write_fragments_memory","text":"fragments Input fragments object compress Whether compress data. compression, storage size half size gzip-compressed 10x fragments file. dir Directory read/write data buffer_size performance tuning . number items bufferred memory calling writes disk. path Path hdf5 file disk group group within hdf5 file write data . writing existing hdf5 file group must already use chunk_size performance tuning . chunk size used HDF5 array storage.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/fragment_io.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read/write BPCells fragment objects — write_fragments_memory","text":"Fragment object","code":""},{"path":"https://bnprks.github.io/BPCells/reference/fragment_io.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read/write BPCells fragment objects — write_fragments_memory","text":"Saving directory disk good default local analysis, provides best /O performance lowest memory usage. HDF5 format allows saving within existing hdf5 files group data together, memory format provides fastest performance event memory usage unimportant.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/fragments_identical.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if two fragments objects are identical — fragments_identical","title":"Check if two fragments objects are identical — fragments_identical","text":"Check two fragments objects identical","code":""},{"path":"https://bnprks.github.io/BPCells/reference/fragments_identical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if two fragments objects are identical — fragments_identical","text":"","code":"fragments_identical(fragments1, fragments2)"},{"path":"https://bnprks.github.io/BPCells/reference/fragments_identical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if two fragments objects are identical — fragments_identical","text":"fragments1 First IterableFragments compare fragments2 Second IterableFragments compare","code":""},{"path":"https://bnprks.github.io/BPCells/reference/fragments_identical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if two fragments objects are identical — fragments_identical","text":"boolean whether fragments objects identical","code":""},{"path":"https://bnprks.github.io/BPCells/reference/geneScoreTilesArchR.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate gene-tile distances for ArchR gene activities — geneScoreTilesArchR","title":"Calculate gene-tile distances for ArchR gene activities — geneScoreTilesArchR","text":"ArchR-style gene activity scores based weighted sum tile according signed distance tile gene body. function calculates signed distances according ArchR's default parameters.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/geneScoreTilesArchR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate gene-tile distances for ArchR gene activities — geneScoreTilesArchR","text":"","code":"geneScoreTilesArchR(genes, tile_size = 500, addArchRBug = FALSE)"},{"path":"https://bnprks.github.io/BPCells/reference/geneScoreTilesArchR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate gene-tile distances for ArchR gene activities — geneScoreTilesArchR","text":"genes GRanges object gene start, end, strand tile_size Size tiles consider addArchRBug Replicate ArchR bug handling nested genes","code":""},{"path":"https://bnprks.github.io/BPCells/reference/geneScoreTilesArchR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate gene-tile distances for ArchR gene activities — geneScoreTilesArchR","text":"GRanges object one range per tile, additional metadata columns gene_idx (row index gene tile corresponds ) distance. Distance signed distance calculated tile smaller start coordinate gene gene + strand, distance negative calculated min(0, end(tile) - start(gene))","code":""},{"path":"https://bnprks.github.io/BPCells/reference/geneScoreTilesArchR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate gene-tile distances for ArchR gene activities — geneScoreTilesArchR","text":"ArchR's tile distance algorithm works follows Genes extended 5kb upstream Genes linked tiles 1kb-100kb upstream + downstream, tiles beyond neighboring gene considered Note: assumes 1-based, end inclusive coordinate convention used GRanges, 500bp tiles run bases 1-500, 501-1000, etc.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/geneScoreWeightsArchR.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate GeneActivityScore weights matrix — geneScoreWeightsArchR","title":"Calculate GeneActivityScore weights matrix — geneScoreWeightsArchR","text":"Given set tile coordinates distances returned geneScoreTilesArchR, calculate weight matrix dimensions genes x tiles. matrix can multiplied tile matrix obtain ArchR-compatible gene activity scores.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/geneScoreWeightsArchR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate GeneActivityScore weights matrix — geneScoreWeightsArchR","text":"","code":"geneScoreWeightsArchR(tiles, chr_sizes = GenomeInfoDb::seqlengths(tiles))"},{"path":"https://bnprks.github.io/BPCells/reference/geneScoreWeightsArchR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate GeneActivityScore weights matrix — geneScoreWeightsArchR","text":"tiles Tile coordinates returned geneScoreTilesArchR chr_sizes Named vector chromosome sizes chromosmes order listed tile matrix (used calculate index tile)","code":""},{"path":"https://bnprks.github.io/BPCells/reference/geneScoreWeightsArchR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate GeneActivityScore weights matrix — geneScoreWeightsArchR","text":"Weight matrix dimension genes x tiles","code":""},{"path":"https://bnprks.github.io/BPCells/reference/gene_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene Symbol Mapping data — human_gene_mapping","title":"Gene Symbol Mapping data — human_gene_mapping","text":"Mapping canonical gene symbols corresponding unambiguous alias, previous symbol, ensembl ID, entrez ID","code":""},{"path":"https://bnprks.github.io/BPCells/reference/gene_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene Symbol Mapping data — human_gene_mapping","text":"","code":"human_gene_mapping  mouse_gene_mapping"},{"path":"https://bnprks.github.io/BPCells/reference/gene_mapping.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gene Symbol Mapping data — human_gene_mapping","text":"human_gene_mapping named character vector. Names aliases IDs values corresponding canonical gene symbol mouse_gene_mapping named character vector. Names aliases IDs values corresponding canonical gene symbol","code":""},{"path":"https://bnprks.github.io/BPCells/reference/gene_mapping.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Gene Symbol Mapping data — human_gene_mapping","text":"human_gene_mapping http://ftp.ebi.ac.uk/pub/databases/genenames/hgnc/tsv/non_alt_loci_set.txt mouse_gene_mapping http://www.informatics.jax.org/downloads/reports/MGI_EntrezGene.rpt http://www.informatics.jax.org/downloads/reports/MRK_ENSEMBL.rpt","code":""},{"path":"https://bnprks.github.io/BPCells/reference/gene_matching.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene symbol matching — match_gene_symbol","title":"Gene symbol matching — match_gene_symbol","text":"Correct alias gene symbols, Ensembl IDs, Entrez IDs canonical gene symbols. useful matching gene names different datasets might always use gene naming conventions.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/gene_matching.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene symbol matching — match_gene_symbol","text":"","code":"match_gene_symbol(query, subject, gene_mapping = human_gene_mapping)  canonical_gene_symbol(query, gene_mapping = human_gene_mapping)"},{"path":"https://bnprks.github.io/BPCells/reference/gene_matching.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gene symbol matching — match_gene_symbol","text":"query Character vector gene symbols IDs subject Vector gene symbols IDs index gene_mapping Named vector names gene symbols IDs values canonical gene symbols","code":""},{"path":"https://bnprks.github.io/BPCells/reference/gene_matching.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gene symbol matching — match_gene_symbol","text":"match_gene_symbol Integer vector indices v subject[v] corresponds gene symbols query canonical_gene_symbol Character vector canonical gene symbols symbol query","code":""},{"path":"https://bnprks.github.io/BPCells/reference/gene_region.html","id":null,"dir":"Reference","previous_headings":"","what":"Find gene region — gene_region","title":"Find gene region — gene_region","text":"Conveniently look region gene gene symbol. value returned function can used region argument trackplot functions trackplot_bulk() trackplot_gene()","code":""},{"path":"https://bnprks.github.io/BPCells/reference/gene_region.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find gene region — gene_region","text":"","code":"gene_region(   genes,   gene_symbol,   extend_bp = 10000,   gene_mapping = human_gene_mapping )"},{"path":"https://bnprks.github.io/BPCells/reference/gene_region.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find gene region — gene_region","text":"genes GRanges, list, data.frame transcript features plot. Required attributes : chr, start, end: genomic position gene_name: Symbol gene ID gene_symbol Name gene symbol ID extend_bp Bases extend region upstream downstream gene gene_mapping Named vector names gene symbols IDs values canonical gene symbols","code":""},{"path":"https://bnprks.github.io/BPCells/reference/gene_region.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find gene region — gene_region","text":"list chr, start, end positions use , etc.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/gene_score_tiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate gene-tile distances for ArchR gene activities — gene_score_tiles","title":"Calculate gene-tile distances for ArchR gene activities — gene_score_tiles","text":"ArchR-style gene activity scores based weighted sum tile according signed distance tile gene body. function calculates signed distances according ArchR's default parameters.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/gene_score_tiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate gene-tile distances for ArchR gene activities — gene_score_tiles","text":"","code":"gene_score_tiles(   genes,   chromosome_sizes = NULL,   tile_size = 500,   addArchRBug = FALSE )"},{"path":"https://bnprks.github.io/BPCells/reference/gene_score_tiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate gene-tile distances for ArchR gene activities — gene_score_tiles","text":"genes GRanges object gene start, end, strand chromosome_sizes (optional) Size chromosomes genomic-ranges object tile_size Size tiles consider addArchRBug Replicate ArchR bug handling nested genes","code":""},{"path":"https://bnprks.github.io/BPCells/reference/gene_score_tiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate gene-tile distances for ArchR gene activities — gene_score_tiles","text":"GRanges object one range per tile, additional metadata columns gene_idx (row index gene tile corresponds ) distance. Distance signed distance calculated tile smaller start coordinate gene gene + strand, distance negative calculated min(0, end(tile) - start(gene))","code":""},{"path":"https://bnprks.github.io/BPCells/reference/gene_score_tiles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate gene-tile distances for ArchR gene activities — gene_score_tiles","text":"ArchR's tile distance algorithm works follows Genes extended 5kb upstream Genes linked tiles 1kb-100kb upstream + downstream, tiles beyond neighboring gene considered Note: assumes 1-based, end inclusive coordinate convention used GRanges, 500bp tiles run bases 1-500, 501-1000, etc.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/gene_score_weights_archr.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate GeneActivityScore weights matrix — gene_score_weights_archr","title":"Calculate GeneActivityScore weights matrix — gene_score_weights_archr","text":"Given set tile coordinates distances returned gene_score_tiles(), calculate weight matrix dimensions genes x tiles. matrix can multiplied tile matrix obtain ArchR-compatible gene activity scores.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/gene_score_weights_archr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate GeneActivityScore weights matrix — gene_score_weights_archr","text":"","code":"gene_score_weights_archr(   genes,   chromosome_sizes,   blacklist = NULL,   tile_size = 500,   addArchRBug = FALSE )"},{"path":"https://bnprks.github.io/BPCells/reference/gene_score_weights_archr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate GeneActivityScore weights matrix — gene_score_weights_archr","text":"genes GRanges object gene start, end, strand chromosome_sizes genomic-ranges holding start end coordinates chromosome. See read_ucsc_chrom_sizes(). blacklist Blacklist ranges exclude gene calculations. genomic-ranges object (list, data.frame, GRanges) tile_size Size tiles consider addArchRBug Replicate ArchR bug handling nested genes","code":""},{"path":"https://bnprks.github.io/BPCells/reference/gene_score_weights_archr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate GeneActivityScore weights matrix — gene_score_weights_archr","text":"Weight matrix dimension genes x tiles","code":""},{"path":"https://bnprks.github.io/BPCells/reference/genomic-ranges.html","id":null,"dir":"Reference","previous_headings":"","what":"Genomic range objects — genomic-ranges","title":"Genomic range objects — genomic-ranges","text":"Ranges genomic coordinates given chromosme, start, end coordinate, along optional metadata range. exception GenomicRanges::GRanges objects, BPCells objects assumed use zero-based, end-exclusive coordinate system (see details).","code":""},{"path":"https://bnprks.github.io/BPCells/reference/genomic-ranges.html","id":"valid-range-like-objects","dir":"Reference","previous_headings":"","what":"Valid Range-like objects","title":"Genomic range objects — genomic-ranges","text":"BPCells can interpret following types ranges: list(), data.frame(), columns: chr: Character factor chromosome names start: Start coordinates (0-based) end: End coordinates (exclusive) (optional) strand: \"+\"/\"-\" TRUE/FALSE pos/neg strand (optional) Additional metadata named list entries data.frame columns GenomicRanges::GRanges start(x) interpreted 1-based start coordinate end(x) interpreted inclusive end coordinate strand(x): \"*\" entries interpeted postive strand (optional) mcols(x) holds additional metadata character Given format \"chr1:1000-2000\" \"chr1:1,000-2,000\" Uses 0-based, end-exclusive coordinate system used ranges additional metadata required","code":""},{"path":"https://bnprks.github.io/BPCells/reference/genomic-ranges.html","id":"range-coordinate-systems","dir":"Reference","previous_headings":"","what":"Range coordinate systems","title":"Genomic range objects — genomic-ranges","text":"two main conventions coordinate systems: One-based, end-inclusive ranges first base chromosome numbered 1 last base range equal end coordinate e.g. 1-5 describes first 5 bases chromosome Used formats SAM, GTF BPCells, used reading writing GenomicRanges::GRanges objects Zero-based, end-exclusive ranges first base chromosome numbered 0 last base range one less end coordinate e.g. 0-5 describes first 5 bases chromosome Used formats BAM, BED BPCells, used range objects","code":""},{"path":"https://bnprks.github.io/BPCells/reference/iterate_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a wrapped pointer to the iterable matrix, in the form of an XPtrList (see fragments.R) — iterate_matrix","title":"Get a wrapped pointer to the iterable matrix, in the form of an XPtrList (see fragments.R) — iterate_matrix","text":"Get wrapped pointer iterable matrix, form XPtrList (see fragments.R)","code":""},{"path":"https://bnprks.github.io/BPCells/reference/iterate_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a wrapped pointer to the iterable matrix, in the form of an XPtrList (see fragments.R) — iterate_matrix","text":"","code":"iterate_matrix(x)"},{"path":"https://bnprks.github.io/BPCells/reference/knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a knn matrix from reduced dimensions — knn_hnsw","title":"Get a knn matrix from reduced dimensions — knn_hnsw","text":"Search approximate nearest neighbors cells reduced dimensions (e.g. PCA), return k nearest neighbors (knn) cell. Optionally, can find neighbors two separate sets cells utilizing data query.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a knn matrix from reduced dimensions — knn_hnsw","text":"","code":"knn_hnsw(   data,   query = NULL,   k = 10,   metric = c(\"euclidean\", \"cosine\"),   verbose = TRUE,   threads = 1,   ef = 100 )  knn_annoy(   data,   query = data,   k = 10,   metric = c(\"euclidean\", \"cosine\", \"manhattan\", \"hamming\"),   n_trees = 50,   search_k = -1 )"},{"path":"https://bnprks.github.io/BPCells/reference/knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a knn matrix from reduced dimensions — knn_hnsw","text":"data cell x dims matrix reference dataset query cell x dims matrix query dataset (optional) k number neighbors calculate metric distance metric use verbose whether print progress information search threads Number threads use. Note result non-deterministic threads > 1 ef ef parameter RccppHNSW::hnsw_search. Increase slower search improved accuracy n_trees Number trees index build time. trees gives higher accuracy search_k Number nodes inspect query, -1 default value. Higher number gives higher accuracy","code":""},{"path":"https://bnprks.github.io/BPCells/reference/knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a knn matrix from reduced dimensions — knn_hnsw","text":"List 2 matrices -- idx cell x K neighbor indices, dist cell x K neighbor distances. query given, nearest neighbors found mapping data matrix , prohibiting self-neighbors","code":""},{"path":"https://bnprks.github.io/BPCells/reference/knn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get a knn matrix from reduced dimensions — knn_hnsw","text":"knn_hnsw: Use RcppHNSW knn engine knn_annoy: Use RcppAnnoy knn engine","code":""},{"path":"https://bnprks.github.io/BPCells/reference/knn_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"K Nearest Neighbor (KNN) Graph — knn_to_graph","title":"K Nearest Neighbor (KNN) Graph — knn_to_graph","text":"Convert KNN object (e.g. returned knn_hnsw() knn_annoy()) graph. graph represented sparse adjacency matrix.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/knn_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"K Nearest Neighbor (KNN) Graph — knn_to_graph","text":"","code":"knn_to_graph(knn, use_weights = FALSE, self_loops = TRUE)  knn_to_snn_graph(knn, min_val = 1/15, self_loops = TRUE)"},{"path":"https://bnprks.github.io/BPCells/reference/knn_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"K Nearest Neighbor (KNN) Graph — knn_to_graph","text":"knn List 2 matrices -- idx cell x K neighbor indices, dist cell x K neighbor distances use_weights boolean whether replace distance weights 1 self_loops boolean whether allow cells count neighbors min_val minimum jaccard index neighbors. Values round 0","code":""},{"path":"https://bnprks.github.io/BPCells/reference/knn_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"K Nearest Neighbor (KNN) Graph — knn_to_graph","text":"knn_to_graph Sparse matrix (dgCMatrix) mat[,j] = distance cell cell j, 0 cell j K nearest neighbors knn_to_snn_graph Sparse matrix (dgCMatrix) mat[,j] = jaccard index overlap nearest neigbors cell cell j, 0 jaccard index < min_val","code":""},{"path":"https://bnprks.github.io/BPCells/reference/knn_graph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"K Nearest Neighbor (KNN) Graph — knn_to_graph","text":"knn_to_graph Create knn graph knn_to_snn_graph Convert knn object shared nearest neighbors adjacency matrix. follows algorithm Seurat uses compute SNN graphs","code":""},{"path":"https://bnprks.github.io/BPCells/reference/length_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Count fragments by size — length_distribution","title":"Count fragments by size — length_distribution","text":"Count fragments size","code":""},{"path":"https://bnprks.github.io/BPCells/reference/length_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count fragments by size — length_distribution","text":"","code":"length_distribution(fragments)"},{"path":"https://bnprks.github.io/BPCells/reference/length_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count fragments by size — length_distribution","text":"fragments Fragments object","code":""},{"path":"https://bnprks.github.io/BPCells/reference/length_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count fragments by size — length_distribution","text":"Numeric vector index contans number length-fragments","code":""},{"path":"https://bnprks.github.io/BPCells/reference/linear_operator.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a LinearOperator object — linear_operator","title":"Construct a LinearOperator object — linear_operator","text":"Constructs C++ matrix object save pointer use repeated matrix-vector products bit experimental still internal use","code":""},{"path":"https://bnprks.github.io/BPCells/reference/linear_operator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a LinearOperator object — linear_operator","text":"","code":"linear_operator(mat)"},{"path":"https://bnprks.github.io/BPCells/reference/mat_norm.html","id":null,"dir":"Reference","previous_headings":"","what":"Broadcasting vector arithmetic — add_rows","title":"Broadcasting vector arithmetic — add_rows","text":"Convenience functions adding multiplying row / column mtarix number.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/mat_norm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Broadcasting vector arithmetic — add_rows","text":"","code":"add_rows(mat, vec)  add_cols(mat, vec)  multiply_rows(mat, vec)  multiply_cols(mat, vec)"},{"path":"https://bnprks.github.io/BPCells/reference/mat_norm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Broadcasting vector arithmetic — add_rows","text":"mat Matrix-like object vec Numeric vector","code":""},{"path":"https://bnprks.github.io/BPCells/reference/mat_norm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Broadcasting vector arithmetic — add_rows","text":"Matrix-like object","code":""},{"path":"https://bnprks.github.io/BPCells/reference/matrixStats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate matrix stats — matrixStats","title":"Calculate matrix stats — matrixStats","text":"Calculate matrix stats","code":""},{"path":"https://bnprks.github.io/BPCells/reference/matrixStats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate matrix stats — matrixStats","text":"","code":"matrixStats(   matrix,   row_stats = c(\"none\", \"nonzero\", \"mean\", \"variance\"),   col_stats = c(\"none\", \"nonzero\", \"mean\", \"variance\") )"},{"path":"https://bnprks.github.io/BPCells/reference/matrixStats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate matrix stats — matrixStats","text":"matrix Input matrix object row_stats row statistics compute col_stats col statistics compute","code":""},{"path":"https://bnprks.github.io/BPCells/reference/matrixStats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate matrix stats — matrixStats","text":"List row_stats: matrix n_stats x n_rows, col_stats: matrix n_stats x n_cols","code":""},{"path":"https://bnprks.github.io/BPCells/reference/matrixStats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate matrix stats — matrixStats","text":"statistics calculated single pass matrix, method desirable use efficiency purposes compared standard rowMeans colMeans multiple statistics needed. variance calculated, mean nonzero count included output, mean calculated nonzero count included output.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/matrix_io.html","id":null,"dir":"Reference","previous_headings":"","what":"Read/write sparse matrices — write_matrix_memory","title":"Read/write sparse matrices — write_matrix_memory","text":"BPCells matrices stored sparse format, meaning non-zero entries stored. Matrices can store integer counts data decimal numbers (float double). See details information.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/matrix_io.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read/write sparse matrices — write_matrix_memory","text":"","code":"write_matrix_memory(mat, compress = TRUE)  write_matrix_dir(mat, dir, compress = TRUE, buffer_size = 8192L)  open_matrix_dir(dir, buffer_size = 8192L)  write_matrix_hdf5(   mat,   path,   group,   compress = TRUE,   buffer_size = 8192L,   chunk_size = 1024L )  open_matrix_hdf5(path, group, buffer_size = 16384L)"},{"path":"https://bnprks.github.io/BPCells/reference/matrix_io.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read/write sparse matrices — write_matrix_memory","text":"compress Whether compress data. dir Directory save data buffer_size performance tuning . number items buffered memory calling writes disk. path Path hdf5 file disk group group within hdf5 file write data . writing existing hdf5 file group must already use chunk_size performance tuning . chunk size used HDF5 array storage. matrix Input matrix, either IterableMatrix dgCMatrix","code":""},{"path":"https://bnprks.github.io/BPCells/reference/matrix_io.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read/write sparse matrices — write_matrix_memory","text":"BPCells matrix object","code":""},{"path":[]},{"path":"https://bnprks.github.io/BPCells/reference/matrix_io.html","id":"storage-locations","dir":"Reference","previous_headings":"","what":"Storage locations","title":"Read/write sparse matrices — write_matrix_memory","text":"Matrices can stored directory disk, memory, HDF5 file. Saving directory disk good default local analysis, provides best /O performance lowest memory usage. HDF5 format allows saving within existing hdf5 files group data together, memory format provides fastest performance event memory usage unimportant.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/matrix_io.html","id":"bitpacking-compression","dir":"Reference","previous_headings":"","what":"Bitpacking Compression","title":"Read/write sparse matrices — write_matrix_memory","text":"typical RNA counts matrices holding integer counts, bitpacking compression result 6-8x less space R dgCMatrix, 4-6x smaller scipy csc_matrix. compression effective count values matrix small, rows matrix sorted rowMeans. tests RNA-seq data optimal ordering save 40% storage space. non-integer data row indices compressed, values space savings smaller. non-integer data matrices, bitpacking compression much less effective, can applied indexes entry values. still space savings, far less counts matrices.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/matrix_is_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Return boolean whether the matrix is a transform — matrix_is_transform","title":"Return boolean whether the matrix is a transform — matrix_is_transform","text":"matrix transform loading data another matrix R object rather data source owns. used primarily know safe clear dimnames intermediate transformed matrices. C++ relies base matrices (non-transform) dimnames, R relies outermost matrix (transform) dimnames.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/matrix_is_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return boolean whether the matrix is a transform — matrix_is_transform","text":"","code":"matrix_is_transform(x)"},{"path":"https://bnprks.github.io/BPCells/reference/matrix_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate matrix stats — matrix_stats","title":"Calculate matrix stats — matrix_stats","text":"Calculate matrix stats","code":""},{"path":"https://bnprks.github.io/BPCells/reference/matrix_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate matrix stats — matrix_stats","text":"","code":"matrix_stats(   matrix,   row_stats = c(\"none\", \"nonzero\", \"mean\", \"variance\"),   col_stats = c(\"none\", \"nonzero\", \"mean\", \"variance\") )"},{"path":"https://bnprks.github.io/BPCells/reference/matrix_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate matrix stats — matrix_stats","text":"matrix Input matrix object row_stats row statistics compute col_stats col statistics compute","code":""},{"path":"https://bnprks.github.io/BPCells/reference/matrix_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate matrix stats — matrix_stats","text":"List row_stats: matrix n_stats x n_rows, col_stats: matrix n_stats x n_cols","code":""},{"path":"https://bnprks.github.io/BPCells/reference/matrix_stats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate matrix stats — matrix_stats","text":"statistics calculated single pass matrix, method desirable use efficiency purposes compared standard rowMeans colMeans multiple statistics needed. variance calculated, mean nonzero count included output, mean calculated nonzero count included output.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/matrix_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the matrix data type (mat_uint32_t, mat_float, or mat_double for now) — matrix_type","title":"Get the matrix data type (mat_uint32_t, mat_float, or mat_double for now) — matrix_type","text":"Get matrix data type (mat_uint32_t, mat_float, mat_double now)","code":""},{"path":"https://bnprks.github.io/BPCells/reference/matrix_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the matrix data type (mat_uint32_t, mat_float, or mat_double for now) — matrix_type","text":"","code":"matrix_type(x)"},{"path":"https://bnprks.github.io/BPCells/reference/merge_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge cells into pseudobulks — merge_cells","title":"Merge cells into pseudobulks — merge_cells","text":"Peak tile matrix calculations can sped reducing number cells. cases outputs going added together afterwards, can provide performance improvement","code":""},{"path":"https://bnprks.github.io/BPCells/reference/merge_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge cells into pseudobulks — merge_cells","text":"","code":"merge_cells(fragments, cell_groups)"},{"path":"https://bnprks.github.io/BPCells/reference/merge_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge cells into pseudobulks — merge_cells","text":"fragments Input fragments object cell_groups Character factor vector providing group cell. Ordering cellNames(fragments)","code":""},{"path":"https://bnprks.github.io/BPCells/reference/merge_dimnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for rbind/cbind merging dimnames — merge_dimnames","title":"Helper function for rbind/cbind merging dimnames — merge_dimnames","text":"Helper function rbind/cbind merging dimnames","code":""},{"path":"https://bnprks.github.io/BPCells/reference/merge_dimnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for rbind/cbind merging dimnames — merge_dimnames","text":"","code":"merge_dimnames(x, y, warning_prefix, dim_type)"},{"path":"https://bnprks.github.io/BPCells/reference/merge_peaks_iterative.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge peaks — merge_peaks_iterative","title":"Merge peaks — merge_peaks_iterative","text":"Merge peaks according ArchR's iterative merging algorithm. details : https://www.archrproject.com/bookdown/-iterative-overlap-peak-merging-procedure.html","code":""},{"path":"https://bnprks.github.io/BPCells/reference/merge_peaks_iterative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge peaks — merge_peaks_iterative","text":"","code":"merge_peaks_iterative(peaks)"},{"path":"https://bnprks.github.io/BPCells/reference/merge_peaks_iterative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge peaks — merge_peaks_iterative","text":"peaks data.frame, tibble, list ranges object. Must ordered priority columns chr, start, end.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/merge_peaks_iterative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge peaks — merge_peaks_iterative","text":"`tibble::tibble()`` nonoverlapping subset rows peaks. metadata columns preserved","code":""},{"path":"https://bnprks.github.io/BPCells/reference/merge_peaks_iterative.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge peaks — merge_peaks_iterative","text":"Properties merged peaks: peaks merged set overlap Peaks prioritized according order original input output peaks subset input peaks, peak boundaries changed","code":""},{"path":"https://bnprks.github.io/BPCells/reference/min_scalar.html","id":null,"dir":"Reference","previous_headings":"","what":"Take the elementwise min with a constant — min_scalar","title":"Take the elementwise min with a constant — min_scalar","text":"Take elementwise minimum positive value. effect capping maximum value matrix","code":""},{"path":"https://bnprks.github.io/BPCells/reference/min_scalar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take the elementwise min with a constant — min_scalar","text":"","code":"min_scalar(mat, val)"},{"path":"https://bnprks.github.io/BPCells/reference/min_scalar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take the elementwise min with a constant — min_scalar","text":"mat IterableMatrix val Single positive numeric value","code":""},{"path":"https://bnprks.github.io/BPCells/reference/min_scalar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take the elementwise min with a constant — min_scalar","text":"IterableMatrix","code":""},{"path":"https://bnprks.github.io/BPCells/reference/normalize_ranges.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize an object representing genomic ranges — normalize_ranges","title":"Normalize an object representing genomic ranges — normalize_ranges","text":"Normalize object representing genomic ranges","code":""},{"path":"https://bnprks.github.io/BPCells/reference/normalize_ranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize an object representing genomic ranges — normalize_ranges","text":"","code":"normalize_ranges(   ranges,   metadata_cols = character(0),   zero_based_coords = !is(ranges, \"GRanges\"),   n = 1 )"},{"path":"https://bnprks.github.io/BPCells/reference/normalize_ranges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize an object representing genomic ranges — normalize_ranges","text":"ranges List, GRanges, data.frame object. Must start, end, chr defined. See genomic-ranges metadata_cols Optional list metadata columns require & extract zero_based_coords true, coordinates start 0 end coordinate included range. false, coordinates start 1 end coordinate included range","code":""},{"path":"https://bnprks.github.io/BPCells/reference/normalize_ranges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize an object representing genomic ranges — normalize_ranges","text":"data frame zero-based coordinates, elements chr (factor), start (int), end (int). ranges chr level information, chr levels sorted unique values chr. strand metadata_cols, output strand element TRUE positive strand, FALSE negative strand. (Converted character vector \"+\"/\"-\" necessary)","code":""},{"path":"https://bnprks.github.io/BPCells/reference/normalized_dimnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to set dimnames to NULL instead of 0-length character vectors — normalized_dimnames","title":"Helper function to set dimnames to NULL instead of 0-length character vectors — normalized_dimnames","text":"Helper function set dimnames NULL instead 0-length character vectors","code":""},{"path":"https://bnprks.github.io/BPCells/reference/normalized_dimnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to set dimnames to NULL instead of 0-length character vectors — normalized_dimnames","text":"","code":"normalized_dimnames(row_names, col_names)"},{"path":"https://bnprks.github.io/BPCells/reference/nucleosome_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Count fragments by nucleosomal size — nucleosome_counts","title":"Count fragments by nucleosomal size — nucleosome_counts","text":"Count fragments nucleosomal size","code":""},{"path":"https://bnprks.github.io/BPCells/reference/nucleosome_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count fragments by nucleosomal size — nucleosome_counts","text":"","code":"nucleosome_counts(fragments, nucleosome_width = 147)"},{"path":"https://bnprks.github.io/BPCells/reference/nucleosome_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count fragments by nucleosomal size — nucleosome_counts","text":"fragments Fragments object nucleosome_width Integer cutoff use nucleosome width","code":""},{"path":"https://bnprks.github.io/BPCells/reference/nucleosome_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count fragments by nucleosomal size — nucleosome_counts","text":"List names subNucleosomal, monoNucleosomal, multiNucleosomal containing count vectors fragments class per cell.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/open_fragments_10x.html","id":null,"dir":"Reference","previous_headings":"","what":"Read/write a 10x fragments file — open_fragments_10x","title":"Read/write a 10x fragments file — open_fragments_10x","text":"10x fragment files come bed-like format, columns chr, start, end, cell_id, pcr_duplicates. Unlike standard bed format, format cellranger inclusive end-coordinate, meaning end coordinate counted tagmentation site, rather offset 1.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/open_fragments_10x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read/write a 10x fragments file — open_fragments_10x","text":"","code":"open_fragments_10x(path, comment = \"#\", end_inclusive = TRUE)  write_fragments_10x(   fragments,   path,   end_inclusive = TRUE,   append_5th_column = FALSE )"},{"path":"https://bnprks.github.io/BPCells/reference/open_fragments_10x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read/write a 10x fragments file — open_fragments_10x","text":"path File path (e.g. fragments.tsv fragments.tsv.gz) comment Skip lines beginning file start comment end_inclusive Whether end coordinate bed inclusive -- .e. insertion end coordinate rather base end coordinate. 10x default, though quite standard bed file format. fragments Input fragments object append_5th_column Whether include 5th column 0 compatibility 10x fragment file outputs (defaults 4 columns chr,start,end,cell)","code":""},{"path":"https://bnprks.github.io/BPCells/reference/open_fragments_10x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read/write a 10x fragments file — open_fragments_10x","text":"10x fragments file object","code":""},{"path":"https://bnprks.github.io/BPCells/reference/open_fragments_10x.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read/write a 10x fragments file — open_fragments_10x","text":"open_fragments_10x disk operations take place fragments used function write_fragments_10x Fragments written disk immediately, returned readable object.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/open_fragments_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Open an existing fragments object from a directory — open_fragments_dir","title":"Open an existing fragments object from a directory — open_fragments_dir","text":"Open existing fragments object directory","code":""},{"path":"https://bnprks.github.io/BPCells/reference/open_fragments_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open an existing fragments object from a directory — open_fragments_dir","text":"","code":"open_fragments_dir(dir, buffer_size = 1024L)"},{"path":"https://bnprks.github.io/BPCells/reference/open_fragments_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open an existing fragments object from a directory — open_fragments_dir","text":"dir Directory read data , written write_fragments_dir buffer_size performance tuning . number fragments buffered memory read","code":""},{"path":"https://bnprks.github.io/BPCells/reference/open_fragments_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open an existing fragments object from a directory — open_fragments_dir","text":"FragmentsDir object","code":""},{"path":"https://bnprks.github.io/BPCells/reference/open_fragments_hdf5.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a fragments object from an hdf5 file — open_fragments_hdf5","title":"Read a fragments object from an hdf5 file — open_fragments_hdf5","text":"Read fragments object hdf5 file","code":""},{"path":"https://bnprks.github.io/BPCells/reference/open_fragments_hdf5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a fragments object from an hdf5 file — open_fragments_hdf5","text":"","code":"open_fragments_hdf5(path, group = \"fragments\", buffer_size = 16384L)"},{"path":"https://bnprks.github.io/BPCells/reference/open_fragments_hdf5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a fragments object from an hdf5 file — open_fragments_hdf5","text":"path Path hdf5 file disk group group within hdf5 file write data . writing existing hdf5 file group must already use buffer_size performance tuning . number items bufferred memory calling reads disk.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/open_fragments_hdf5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a fragments object from an hdf5 file — open_fragments_hdf5","text":"FragmentsHDF5 object","code":""},{"path":"https://bnprks.github.io/BPCells/reference/open_matrix_10x_hdf5.html","id":null,"dir":"Reference","previous_headings":"","what":"Read/write a 10x feature matrix — open_matrix_10x_hdf5","title":"Read/write a 10x feature matrix — open_matrix_10x_hdf5","text":"Read/write 10x feature matrix","code":""},{"path":"https://bnprks.github.io/BPCells/reference/open_matrix_10x_hdf5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read/write a 10x feature matrix — open_matrix_10x_hdf5","text":"","code":"open_matrix_10x_hdf5(path, feature_type = NULL, buffer_size = 16384L)  write_matrix_10x_hdf5(   mat,   path,   barcodes = colnames(mat),   feature_ids = rownames(mat),   feature_names = rownames(mat),   feature_types = \"Gene Expression\",   feature_metadata = list(),   buffer_size = 16384L,   chunk_size = 1024L )"},{"path":"https://bnprks.github.io/BPCells/reference/open_matrix_10x_hdf5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read/write a 10x feature matrix — open_matrix_10x_hdf5","text":"path Path hdf5 file disk feature_type String vector feature types buffer_size performance tuning . number items buffered memory calling writes disk. mat IterableMatrix barcodes Vector names cells feature_ids Vector IDs features feature_names Vector names features feature_metadata Named list additional metadata vectors store feature chunk_size performance tuning . chunk size used HDF5 array storage.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/open_matrix_10x_hdf5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read/write a 10x feature matrix — open_matrix_10x_hdf5","text":"BPCells matrix object","code":""},{"path":"https://bnprks.github.io/BPCells/reference/open_matrix_10x_hdf5.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read/write a 10x feature matrix — open_matrix_10x_hdf5","text":"10x format makes use gzip compression matrix data, can slow read performance. Consider writing another format read performance important . Input matrices must column-major storage order, rownames colnames set, names must provided relevant metadata parameters. metadata parameters read default BPCells, possible export use tools.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/open_matrix_anndata_hdf5.html","id":null,"dir":"Reference","previous_headings":"","what":"Read AnnData matrix — open_matrix_anndata_hdf5","title":"Read AnnData matrix — open_matrix_anndata_hdf5","text":"Read sparse integer matrix anndata matrix hdf5 file.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/open_matrix_anndata_hdf5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read AnnData matrix — open_matrix_anndata_hdf5","text":"","code":"open_matrix_anndata_hdf5(path, group = \"X\", buffer_size = 16384L)"},{"path":"https://bnprks.github.io/BPCells/reference/open_matrix_anndata_hdf5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read AnnData matrix — open_matrix_anndata_hdf5","text":"path Path hdf5 file disk group group within hdf5 file write data . writing existing hdf5 file group must already use buffer_size performance tuning . number items buffered memory calling writes disk.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/open_matrix_anndata_hdf5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read AnnData matrix — open_matrix_anndata_hdf5","text":"AnnDataMatrixH5 object, cells columns.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/open_matrix_anndata_hdf5.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read AnnData matrix — open_matrix_anndata_hdf5","text":"Since AnnData stores RNA matrices cells x genes, whereas BPCells stores RNA matrices genes x cells, returned matrix transposed relative native AnnData matrix.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/open_matrix_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Open an existing integer sparse matrix object written with write_matrix_dir — open_matrix_dir","title":"Open an existing integer sparse matrix object written with write_matrix_dir — open_matrix_dir","text":"Open existing integer sparse matrix object written write_matrix_dir","code":""},{"path":"https://bnprks.github.io/BPCells/reference/open_matrix_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open an existing integer sparse matrix object written with write_matrix_dir — open_matrix_dir","text":"","code":"open_matrix_dir(dir, buffer_size = 8192L)"},{"path":"https://bnprks.github.io/BPCells/reference/open_matrix_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open an existing integer sparse matrix object written with write_matrix_dir — open_matrix_dir","text":"dir Directory read data buffer_size performance tuning . number items buffered memory calling writes disk.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/open_matrix_hdf5.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a sparse integer matrix from an hdf5 file — open_matrix_hdf5","title":"Read a sparse integer matrix from an hdf5 file — open_matrix_hdf5","text":"Read sparse integer matrix hdf5 file","code":""},{"path":"https://bnprks.github.io/BPCells/reference/open_matrix_hdf5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a sparse integer matrix from an hdf5 file — open_matrix_hdf5","text":"","code":"open_matrix_hdf5(path, group, buffer_size = 16384L)"},{"path":"https://bnprks.github.io/BPCells/reference/open_matrix_hdf5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a sparse integer matrix from an hdf5 file — open_matrix_hdf5","text":"path Path hdf5 file disk group group within hdf5 file write data . writing existing hdf5 file group must already use buffer_size performance tuning . number items buffered memory calling writes disk.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/open_matrix_hdf5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a sparse integer matrix from an hdf5 file — open_matrix_hdf5","text":"MatrixH5 object","code":""},{"path":"https://bnprks.github.io/BPCells/reference/order_ranges.html","id":null,"dir":"Reference","previous_headings":"","what":"Get end-sorted ordering for genome ranges — order_ranges","title":"Get end-sorted ordering for genome ranges — order_ranges","text":"Use function order regioins prior calling peak_matrix() tile_matrix().","code":""},{"path":"https://bnprks.github.io/BPCells/reference/order_ranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get end-sorted ordering for genome ranges — order_ranges","text":"","code":"order_ranges(ranges, chr_levels, sort_by_end = TRUE)"},{"path":"https://bnprks.github.io/BPCells/reference/order_ranges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get end-sorted ordering for genome ranges — order_ranges","text":"ranges List, GRanges, data.frame object. Must start, end, chr defined. See genomic-ranges chr_levels Ordering chromosome names sort_by_end TRUE (defualt), sort (chr, end, start). Else sort (chr, start, end)","code":""},{"path":"https://bnprks.github.io/BPCells/reference/order_ranges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get end-sorted ordering for genome ranges — order_ranges","text":"Numeric vector analagous order function. Provides index selection reorder input ranges sorted chr, end, start","code":""},{"path":"https://bnprks.github.io/BPCells/reference/peakMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate ranges x cells overlap matrix — peakMatrix","title":"Calculate ranges x cells overlap matrix — peakMatrix","text":"Calculate ranges x cells overlap matrix","code":""},{"path":"https://bnprks.github.io/BPCells/reference/peakMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate ranges x cells overlap matrix — peakMatrix","text":"","code":"peakMatrix(   fragments,   ranges,   zero_based_coords = !is(ranges, \"GRanges\"),   explicit_peak_names = TRUE )"},{"path":"https://bnprks.github.io/BPCells/reference/peakMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate ranges x cells overlap matrix — peakMatrix","text":"fragments Input fragments object. Must cell names chromosome names defined ranges GRanges object ranges overlap, list/data frame columns chr, start, & end. Must sorted order (chr, end, start) chromosomes ordered according chromosome names fragments. zero_based_coords Whether convert ranges 1-based end-inclusive coordinate system 0-based end-exclusive coordinate system. Defaults true GRanges false formats (see http://genome.ucsc.edu/blog/-ucsc-genome-browser-coordinate-counting-systems/) explicit_peak_names Boolean whether add rownames output matrix format e.g chr1:500-1000, start end coords given 0-based coordinate system. Note either way, peak names written matrix saved.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/peakMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate ranges x cells overlap matrix — peakMatrix","text":"Iterable matrix object dimension ranges x cells. saved, column names output matrix format chr1:500-1000, start end coords given 0-based coordinate system.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/peakMatrix.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate ranges x cells overlap matrix — peakMatrix","text":"calculating matrix directly fragments tsv, necessary first call select_chromosomes order provide ordering chromosomes expect reading tsv.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/peak_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate ranges x cells overlap matrix — peak_matrix","title":"Calculate ranges x cells overlap matrix — peak_matrix","text":"Calculate ranges x cells overlap matrix","code":""},{"path":"https://bnprks.github.io/BPCells/reference/peak_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate ranges x cells overlap matrix — peak_matrix","text":"","code":"peak_matrix(   fragments,   ranges,   mode = c(\"insertions\", \"fragments\", \"overlaps\"),   zero_based_coords = !is(ranges, \"GRanges\"),   explicit_peak_names = TRUE )"},{"path":"https://bnprks.github.io/BPCells/reference/peak_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate ranges x cells overlap matrix — peak_matrix","text":"fragments Input fragments object. Must cell names chromosome names defined ranges GRanges object ranges overlap, list/data frame columns chr, start, & end. mode Mode counting peak overlaps. (See \"value\" section details) zero_based_coords Whether convert ranges 1-based end-inclusive coordinate system 0-based end-exclusive coordinate system. Defaults true GRanges false formats (see http://genome.ucsc.edu/blog/-ucsc-genome-browser-coordinate-counting-systems/) explicit_peak_names Boolean whether add rownames output matrix format e.g chr1:500-1000, start end coords given 0-based coordinate system. Note either way, peak names written matrix saved.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/peak_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate ranges x cells overlap matrix — peak_matrix","text":"Iterable matrix object dimension ranges x cells. saved, column names output matrix format chr1:500-1000, start end coords given 0-based coordinate system. mode options \"insertions\": Start end coordinates separately overlapped peak \"fragments\": Like \"insertions\", fragment can contribute 1 count peak, even start end coordinates overlap \"overlaps\": Like \"fragments\", overlap also counted fragment fully spans peak even neither start end falls within peak","code":""},{"path":"https://bnprks.github.io/BPCells/reference/peak_matrix.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate ranges x cells overlap matrix — peak_matrix","text":"calculating matrix directly fragments tsv, necessary first call select_chromosomes order provide ordering chromosomes expect reading tsv.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/plot_dot.html","id":null,"dir":"Reference","previous_headings":"","what":"Dotplot — plot_dot","title":"Dotplot — plot_dot","text":"Plot feature levels per group cluster grid dots. Dots colored z-score normalized average expression, sized percent non-zero.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/plot_dot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dotplot — plot_dot","text":"","code":"plot_dot(   source,   features,   groups,   group_order = NULL,   gene_mapping = human_gene_mapping,   colors = c(\"lightgrey\", \"#4682B4\"),   return_data = FALSE,   apply_styling = TRUE )"},{"path":"https://bnprks.github.io/BPCells/reference/plot_dot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dotplot — plot_dot","text":"source Feature x cell matrix data.frame features. best results, features sparse log-normalized (e.g. run log1p() zero raw counts map zero) features Character vector features plot groups Vector one entry per cell, specifying cell's group group_order Optional vector listing ordering groups gene_mapping optional vector gene name matching match_gene_symbol(). colors Color scale plot return_data true, return data just plotting rather plot. apply_styling false, return plot without pretty styling applied","code":""},{"path":"https://bnprks.github.io/BPCells/reference/plot_embedding.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot UMAP or embeddings — plot_embedding","title":"Plot UMAP or embeddings — plot_embedding","text":"Plot one features coloring cells UMAP plot.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/plot_embedding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot UMAP or embeddings — plot_embedding","text":"","code":"plot_embedding(   source,   embedding,   features = NULL,   quantile_range = c(0.01, 0.99),   randomize_order = TRUE,   smooth = NULL,   smooth_rounds = 3,   gene_mapping = human_gene_mapping,   size = NULL,   rasterize = FALSE,   raster_pixels = 512,   legend_continuous = c(\"auto\", \"quantile\", \"value\"),   labels_quantile_range = TRUE,   colors_continuous = c(\"lightgrey\", \"#4682B4\"),   legend_discrete = TRUE,   labels_discrete = TRUE,   colors_discrete = discrete_palette(\"stallion\"),   return_data = FALSE,   return_plot_list = FALSE,   apply_styling = TRUE )"},{"path":"https://bnprks.github.io/BPCells/reference/plot_embedding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot UMAP or embeddings — plot_embedding","text":"source Matrix, data frame pull features , vector feature values single feature. matrix, features must rows. embedding matrix dimensions cells x 2 embedding coordinates features Character vector features plot source vector. quantile_range (optional) Length 2 vector giving quantiles clip minimum maximum color scale values, fractions 0 1. NULL NA values skip clipping randomize_order TRUE, shuffle cells prevent overplotting biases. Can pass integer instead specify random seed use. smooth (optional) Sparse matrix dimensions cells x cells cell-cell distance weights smoothing. smooth_rounds Number multiplication rounds apply smoothing. gene_mapping optional vector gene name matching match_gene_symbol(). Ignored source data frame. size Point size plotting rasterize Whether rasterize point drawing speed display graphics programs. raster_pixels Number pixels use rasterizing. Can provide one number square dimensions, two numbers width x height. legend_continuous Whether label continuous features quantile value. \"auto\" labels quantile features continuous quantile_range NULL. Quantile labeling adds text annotation listing range displayed values. labels_quantile_range Whether add text label value range feature legend set quantile colors_continuous Vector colors use continuous color palette legend_discrete Whether show legend discrete (categorical) features. labels_discrete Whether add text labels center group discrete (categorical) features. colors_discrete Vector colors use discrete (categorical) features. return_data true, return data just plotting rather plot. return_plot_list TRUE, return multiple plots list, rather single plot combined using patchwork::wrap_plots() apply_styling false, return plot without pretty styling applied","code":""},{"path":"https://bnprks.github.io/BPCells/reference/plot_embedding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot UMAP or embeddings — plot_embedding","text":"default, returns ggplot2 object requested features plotted grid. return_data return_plot_list called, return value match argument.","code":""},{"path":[]},{"path":"https://bnprks.github.io/BPCells/reference/plot_embedding.html","id":"smoothing","dir":"Reference","previous_headings":"","what":"Smoothing","title":"Plot UMAP or embeddings — plot_embedding","text":"Smoothing performed follows: first, smoothing matrix normalized sum incoming weights every cell 1. , raw data values repeatedly multiplied smoothing matrix re-scaled average value stays .","code":""},{"path":"https://bnprks.github.io/BPCells/reference/plot_fragment_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Fragment size distribution — plot_fragment_length","title":"Fragment size distribution — plot_fragment_length","text":"Plot distribution fragment lengths, length basepairs x-axis, proportion fragments y-axis. Typical plots show 10-basepair periodicity, well humps spaced multiples nucleosome width (150bp).","code":""},{"path":"https://bnprks.github.io/BPCells/reference/plot_fragment_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fragment size distribution — plot_fragment_length","text":"","code":"plot_fragment_length(   fragments,   max_length = 500,   return_data = FALSE,   apply_styling = TRUE )"},{"path":"https://bnprks.github.io/BPCells/reference/plot_fragment_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fragment size distribution — plot_fragment_length","text":"fragments Fragments object max_length Maximum length show plot return_data true, return data just plotting rather plot. apply_styling false, return plot without pretty styling applied","code":""},{"path":"https://bnprks.github.io/BPCells/reference/plot_fragment_length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fragment size distribution — plot_fragment_length","text":"Numeric vector index contans number length-fragments","code":""},{"path":"https://bnprks.github.io/BPCells/reference/plot_read_count_knee.html","id":null,"dir":"Reference","previous_headings":"","what":"Knee plot of single cell read counts — plot_read_count_knee","title":"Knee plot of single cell read counts — plot_read_count_knee","text":"Plots read count rank vs. number reads log-log scale.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/plot_read_count_knee.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Knee plot of single cell read counts — plot_read_count_knee","text":"","code":"plot_read_count_knee(   read_counts,   cutoff = NULL,   return_data = FALSE,   apply_styling = TRUE )"},{"path":"https://bnprks.github.io/BPCells/reference/plot_read_count_knee.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Knee plot of single cell read counts — plot_read_count_knee","text":"read_counts Vector read counts per cell cutoff (optional) Read cutoff mark plot return_data true, return data just plotting rather plot. apply_styling false, return plot without pretty styling applied","code":""},{"path":"https://bnprks.github.io/BPCells/reference/plot_read_count_knee.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Knee plot of single cell read counts — plot_read_count_knee","text":"ggplot2 plot object","code":""},{"path":"https://bnprks.github.io/BPCells/reference/plot_read_count_knee.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Knee plot of single cell read counts — plot_read_count_knee","text":"Performs logarithmic downsampling reduce number points plotted","code":""},{"path":"https://bnprks.github.io/BPCells/reference/plot_tf_footprint.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot TF footprint — plot_tf_footprint","title":"Plot TF footprint — plot_tf_footprint","text":"Plot footprinting around TF motif sites","code":""},{"path":"https://bnprks.github.io/BPCells/reference/plot_tf_footprint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot TF footprint — plot_tf_footprint","text":"","code":"plot_tf_footprint(   fragments,   motif_positions,   cell_groups = rlang::rep_along(cellNames(fragments), \"all\"),   flank = 250L,   smooth = 0L,   zero_based_coords = !is(genes, \"GRanges\"),   colors = discrete_palette(\"stallion\"),   return_data = FALSE,   apply_styling = TRUE )"},{"path":"https://bnprks.github.io/BPCells/reference/plot_tf_footprint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot TF footprint — plot_tf_footprint","text":"fragments IterableFragments object motif_positions Coordinate ranges motifs (must include strand) constant width cell_groups Character factor assigning group cell, order cellNames(fragments) flank Number flanking basepairs include either side motif smooth (optional) Sparse matrix dimensions cells x cells cell-cell distance weights smoothing. zero_based_coords true, coordinates start 0 end coordinate included range. false, coordinates start 1 end coordinate included range return_data true, return data just plotting rather plot. apply_styling false, return plot without pretty styling applied","code":""},{"path":[]},{"path":"https://bnprks.github.io/BPCells/reference/plot_tss_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot TSS profile — plot_tss_profile","title":"Plot TSS profile — plot_tss_profile","text":"Plot enrichmment insertions relative transcription start sites (TSS). Typically, plot shows strong enrichment insertions near TSS, small bump downstream around 220bp downstream TSS +1 nucleosome.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/plot_tss_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot TSS profile — plot_tss_profile","text":"","code":"plot_tss_profile(   fragments,   genes,   cell_groups = rlang::rep_along(cellNames(fragments), \"all\"),   flank = 2000L,   smooth = 0L,   zero_based_coords = !is(genes, \"GRanges\"),   colors = discrete_palette(\"stallion\"),   return_data = FALSE,   apply_styling = TRUE )"},{"path":"https://bnprks.github.io/BPCells/reference/plot_tss_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot TSS profile — plot_tss_profile","text":"fragments IterableFragments object genes Coordinate ranges genes (must include strand) cell_groups Character factor assigning group cell, order cellNames(fragments) flank Number flanking basepairs include either side motif smooth Number bases smooth (rolling average) zero_based_coords true, coordinates start 0 end coordinate included range. false, coordinates start 1 end coordinate included range return_data true, return data just plotting rather plot. apply_styling false, return plot without pretty styling applied","code":""},{"path":[]},{"path":"https://bnprks.github.io/BPCells/reference/plot_tss_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"TSS Enrichment vs. Fragment Counts plot — plot_tss_scatter","title":"TSS Enrichment vs. Fragment Counts plot — plot_tss_scatter","text":"Density scatter plot log10(fragment_count) x-axis TSS enrichment y-axis. plot useful select cell barcodes experiment correspond high-quality cells","code":""},{"path":"https://bnprks.github.io/BPCells/reference/plot_tss_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TSS Enrichment vs. Fragment Counts plot — plot_tss_scatter","text":"","code":"plot_tss_scatter(   atac_qc,   min_frags = NULL,   min_tss = NULL,   bins = 100,   apply_styling = TRUE )"},{"path":"https://bnprks.github.io/BPCells/reference/plot_tss_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TSS Enrichment vs. Fragment Counts plot — plot_tss_scatter","text":"atac_qc Tibble returned qc_scATAC(). Must columns nFrags TSSEnrichment min_frags Minimum fragment count cutoff min_tss Minimum TSS Enrichment cutoff bins Number bins density calculation apply_styling false, return plot without pretty styling applied","code":""},{"path":"https://bnprks.github.io/BPCells/reference/prefix_cell_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename cells by adding a prefix to the names (e.g. sample name) — prefix_cell_names","title":"Rename cells by adding a prefix to the names (e.g. sample name) — prefix_cell_names","text":"Rename cells adding prefix names (e.g. sample name)","code":""},{"path":"https://bnprks.github.io/BPCells/reference/prefix_cell_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename cells by adding a prefix to the names (e.g. sample name) — prefix_cell_names","text":"","code":"prefix_cell_names(fragments, prefix)"},{"path":"https://bnprks.github.io/BPCells/reference/prefix_cell_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename cells by adding a prefix to the names (e.g. sample name) — prefix_cell_names","text":"fragments Input fragments object. prefix String add prefix","code":""},{"path":"https://bnprks.github.io/BPCells/reference/prefix_cell_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename cells by adding a prefix to the names (e.g. sample name) — prefix_cell_names","text":"Fragments object prefixed names","code":""},{"path":"https://bnprks.github.io/BPCells/reference/qc_scATAC.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate ArchR-compatible per-cell QC statistics — qc_scATAC","title":"Calculate ArchR-compatible per-cell QC statistics — qc_scATAC","text":"Calculate ArchR-compatible per-cell QC statistics","code":""},{"path":"https://bnprks.github.io/BPCells/reference/qc_scATAC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate ArchR-compatible per-cell QC statistics — qc_scATAC","text":"","code":"qc_scATAC(fragments, genes, blacklist)"},{"path":"https://bnprks.github.io/BPCells/reference/qc_scATAC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate ArchR-compatible per-cell QC statistics — qc_scATAC","text":"fragments IterableFragments object genes GenomicRanges object list/data.frame columns chr, start, end blacklist GenomicRanges object list/data.frame columns chr, start, end","code":""},{"path":"https://bnprks.github.io/BPCells/reference/qc_scATAC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate ArchR-compatible per-cell QC statistics — qc_scATAC","text":"data.frame QC data","code":""},{"path":"https://bnprks.github.io/BPCells/reference/qc_scATAC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate ArchR-compatible per-cell QC statistics — qc_scATAC","text":"implementation mimics ArchR's default parameters. uses requiring flexibility tweak default parameters, best option re-implement function required changes. Output columns data.frame: cellName: cell name cell nFrags: number fragments per cell subNucleosomal, monoNucleosomal, multiNucleosomal: number fragments size 1-146bp, 147-254bp, 255bp + respectively. equivalent ArchR's nMonoFrags, nDiFrags, nMultiFrags respectively TSSEnrichment: AvgInsertInTSS / max(AvgInsertFlankingTSS, 0.1), AvgInsertInTSS ReadsInTSS / 101 (window size), AvgInsertFlankingTSS ReadsFlankingTSS / (100*2) (window size). max(0.1) ensures low-read cells get assigned spuriously high TSSEnrichment. ReadsInPromoter: Number reads 2000bp upstream TSS 101bp downstream TSS ReadsInBlacklist: Number reads provided blacklist region ReadsInTSS: Number reads overlapping 101bp centered around TSS ReadsFlankingTSS: Number reads overlapping 1901-2000bp +/- TSS Differences ArchR: Note ArchR default uses different set annotations derive TSS sites promoter sites. function uses just one annotation gene start+end sites, must called twice exactly re-calculate ArchR QC stats. ArchR's PromoterRatio BlacklistRatio included output, can easily calculated ReadsInPromoter / nFrags  ReadsInBlacklist / nFrags. Similarly, ArchR's NucleosomeRatio can calculated (monoNucleosomal + multiNucleosomal) / subNucleosomal.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/range_distance_to_nearest.html","id":null,"dir":"Reference","previous_headings":"","what":"Find signed distance to nearest genomic ranges — range_distance_to_nearest","title":"Find signed distance to nearest genomic ranges — range_distance_to_nearest","text":"Given set genomic ranges, find distance nearest neighbors upstream downstream.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/range_distance_to_nearest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find signed distance to nearest genomic ranges — range_distance_to_nearest","text":"","code":"range_distance_to_nearest(   ranges,   addArchRBug = FALSE,   zero_based_coords = !is(ranges, \"GRanges\") )"},{"path":"https://bnprks.github.io/BPCells/reference/range_distance_to_nearest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find signed distance to nearest genomic ranges — range_distance_to_nearest","text":"ranges List, GRanges, data.frame object. Must chr, start, end, strand defined. See genomic-ranges addArchRBug boolean reproduce ArchR's bug incorrectly handles nested genes zero_based_coords true, coordinates start 0 end coordinate included range. false, coordinates start 1 end coordinate included range","code":""},{"path":"https://bnprks.github.io/BPCells/reference/range_distance_to_nearest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find signed distance to nearest genomic ranges — range_distance_to_nearest","text":"2-column data.frame columns upstream downstream, containing distances nearest neighbor respective directions. ranges + * strand, distance calculated : upstream = max(start(range) - end(upstreamNeighbor), 0) downstream = max(start(downstreamNeighbor) - end(range), 0) ranges - strand, definition upstream downstream flipped. Note definition distance one GenomicRanges::distance(), ranges neighbor overlap given distance 1 rather 0.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/read_bed.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a bed file into a data frame — read_bed","title":"Read a bed file into a data frame — read_bed","text":"Bed files can contain peak blacklist annotations. utilities help read thos annotations","code":""},{"path":"https://bnprks.github.io/BPCells/reference/read_bed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a bed file into a data frame — read_bed","text":"","code":"read_bed(   path,   additional_columns = character(0),   backup_url = NULL,   timeout = 300 )  read_encode_blacklist(   dir,   genome = c(\"hg38\", \"mm10\", \"hg19\", \"dm6\", \"dm3\", \"ce11\", \"ce10\"),   timeout = 300 )"},{"path":"https://bnprks.github.io/BPCells/reference/read_bed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a bed file into a data frame — read_bed","text":"path Path file (desired save location backup_url used) additional_columns Names additional columns bed file backup_url path exist, provides URL download gtf timeout Maximum time seconds wait download backup_url dir Output directory cache downloaded gtf file genome genome name","code":""},{"path":"https://bnprks.github.io/BPCells/reference/read_bed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a bed file into a data frame — read_bed","text":"Data frame coordinates using 0-based convention.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/read_bed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read a bed file into a data frame — read_bed","text":"read_bed Read bed file disk url. read_encode_blacklist Downloads Boyle Lab blacklist, described https://doi.org/10.1038/s41598-019-45839-z","code":""},{"path":[]},{"path":"https://bnprks.github.io/BPCells/reference/read_encode_blacklist.html","id":null,"dir":"Reference","previous_headings":"","what":"Download ENCODE blacklist annotations — read_encode_blacklist","title":"Download ENCODE blacklist annotations — read_encode_blacklist","text":"Downloads Boyle Lab blacklist, described https://doi.org/10.1038/s41598-019-45839-z","code":""},{"path":"https://bnprks.github.io/BPCells/reference/read_encode_blacklist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download ENCODE blacklist annotations — read_encode_blacklist","text":"","code":"read_encode_blacklist(   dir,   genome = c(\"hg38\", \"mm10\", \"hg19\", \"dm6\", \"dm3\", \"ce11\", \"ce10\"),   timeout = 300 )"},{"path":"https://bnprks.github.io/BPCells/reference/read_encode_blacklist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download ENCODE blacklist annotations — read_encode_blacklist","text":"dir Output directory cache downloaded gtf file genome genome name timeout Maximum time seconds wait download backup_url","code":""},{"path":"https://bnprks.github.io/BPCells/reference/read_encode_blacklist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download ENCODE blacklist annotations — read_encode_blacklist","text":"Data frame coordinates using 0-based convention","code":""},{"path":"https://bnprks.github.io/BPCells/reference/read_gencode_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Download gene annotations from gencode — read_gencode_genes","title":"Download gene annotations from gencode — read_gencode_genes","text":"Download gene annotations gencode","code":""},{"path":"https://bnprks.github.io/BPCells/reference/read_gencode_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download gene annotations from gencode — read_gencode_genes","text":"","code":"read_gencode_genes(   dir,   release = \"41\",   gene_type = \"lncRNA|protein_coding|IG_.*_gene|TR_.*_gene\",   timeout = 300 )"},{"path":"https://bnprks.github.io/BPCells/reference/read_gencode_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download gene annotations from gencode — read_gencode_genes","text":"dir output directory cache downloaded file release release version (prefix M mouse versions). recent version, use \"latest\" \"latest_mouse\" gene_type Regular expression gene types keep. Defaults protein_coding, lncRNA, IG/TR genes timeout Maximum time seconds wait download backup_url","code":""},{"path":"https://bnprks.github.io/BPCells/reference/read_gencode_genes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download gene annotations from gencode — read_gencode_genes","text":"Data frame coordinates using 0-based convention","code":""},{"path":"https://bnprks.github.io/BPCells/reference/read_gtf.html","id":null,"dir":"Reference","previous_headings":"","what":"Read GTF gene annotations — read_gtf","title":"Read GTF gene annotations — read_gtf","text":"Read gene annotations gtf format data frame. source can URL, gtf file disk, gencode release version.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/read_gtf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read GTF gene annotations — read_gtf","text":"","code":"read_gtf(   path,   attributes = c(\"gene_id\"),   tags = character(0),   features = c(\"gene\"),   keep_attribute_column = FALSE,   backup_url = NULL,   timeout = 300 )  read_gencode_genes(   dir,   release = \"latest\",   annotation_set = c(\"basic\", \"comprehensive\"),   gene_type = \"lncRNA|protein_coding|IG_.*_gene|TR_.*_gene\",   attributes = c(\"gene_id\", \"gene_type\", \"gene_name\"),   tags = character(0),   features = c(\"gene\"),   timeout = 300 )  read_gencode_transcripts(   dir,   release = \"latest\",   transcript_choice = c(\"MANE_Select\", \"Ensembl_Canonical\", \"all\"),   annotation_set = c(\"basic\", \"comprehensive\"),   gene_type = \"lncRNA|protein_coding|IG_.*_gene|TR_.*_gene\",   attributes = c(\"gene_id\", \"gene_type\", \"gene_name\", \"transcript_id\"),   features = c(\"transcript\", \"exon\"),   timeout = 300 )"},{"path":"https://bnprks.github.io/BPCells/reference/read_gtf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read GTF gene annotations — read_gtf","text":"path Path file (desired save location backup_url used) attributes Vector GTF attribute names parse columns tags Vector tags parse boolean presence/absence features List features types keep GTF (e.g. gene, transcript, exon, intron) keep_attribute_column Boolean whether preserve raw attribute text column backup_url path exist, provides URL download gtf timeout Maximum time seconds wait download backup_url dir Output directory cache downloaded gtf file release release version (prefix M mouse versions). recent version, use \"latest\" \"latest_mouse\" annotation_set Either \"basic\" \"comprehensive\" annotation sets (see details section). gene_type Regular expression gene types keep. Defaults protein_coding, lncRNA, IG/TR genes transcript_choice Method selecting representative transcripts. Choices : MANE_Select: human-, conservative Ensembl_Canonical: human+mouse, superset MANE_Select human : Preserve transcript models (recommended plotting)","code":""},{"path":"https://bnprks.github.io/BPCells/reference/read_gtf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read GTF gene annotations — read_gtf","text":"Data frame coordinates using 0-based convention. Columns : chr source feature start end score strand frame attributes (optional; named according listed attributes) tags (named according listed tags)","code":""},{"path":"https://bnprks.github.io/BPCells/reference/read_gtf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read GTF gene annotations — read_gtf","text":"read_gtf Read gtf file URL read_gencode_genes Read gene annotations directly GENCODE. file name vary depending release annotation set requested, format gencode.v42.annotation.gtf.gz. GENCODE currently recommends basic set: https://www.gencodegenes.org/human/. release 42, comprehensive basic sets identical gene-level annotations, comprehensive set additional transcript variants annotated. read_gencode_transcripts Read transcript models GENCODE, use trackplot_gene()","code":""},{"path":[]},{"path":"https://bnprks.github.io/BPCells/reference/read_ucsc_chrom_sizes.html","id":null,"dir":"Reference","previous_headings":"","what":"Read UCSC chromosome sizes — read_ucsc_chrom_sizes","title":"Read UCSC chromosome sizes — read_ucsc_chrom_sizes","text":"Read chromosome sizes UCSC return tibble one row per chromosome. underlying data pulled : https://hgdownload.soe.ucsc.edu/downloads.html","code":""},{"path":"https://bnprks.github.io/BPCells/reference/read_ucsc_chrom_sizes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read UCSC chromosome sizes — read_ucsc_chrom_sizes","text":"","code":"read_ucsc_chrom_sizes(   dir,   genome = c(\"hg38\", \"mm39\", \"mm10\", \"mm9\", \"hg19\"),   keep_chromosomes = \"chr[0-9]+|chrX|chrY\",   timeout = 300 )"},{"path":"https://bnprks.github.io/BPCells/reference/rotate_x_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate ggplot x axis labels — rotate_x_labels","title":"Rotate ggplot x axis labels — rotate_x_labels","text":"Rotate ggplot x axis labels","code":""},{"path":"https://bnprks.github.io/BPCells/reference/rotate_x_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate ggplot x axis labels — rotate_x_labels","text":"","code":"rotate_x_labels(degrees = 45)"},{"path":"https://bnprks.github.io/BPCells/reference/rotate_x_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate ggplot x axis labels — rotate_x_labels","text":"degrees Number degrees rotate ","code":""},{"path":"https://bnprks.github.io/BPCells/reference/scan_fragments.html","id":null,"dir":"Reference","previous_headings":"","what":"Scan through fragments without performing any operations (used for benchmarking) — scan_fragments","title":"Scan through fragments without performing any operations (used for benchmarking) — scan_fragments","text":"Scan fragments without performing operations (used benchmarking)","code":""},{"path":"https://bnprks.github.io/BPCells/reference/scan_fragments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scan through fragments without performing any operations (used for benchmarking) — scan_fragments","text":"","code":"scan_fragments(fragments)"},{"path":"https://bnprks.github.io/BPCells/reference/scan_fragments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scan through fragments without performing any operations (used for benchmarking) — scan_fragments","text":"fragments Fragments object scan","code":""},{"path":"https://bnprks.github.io/BPCells/reference/scan_fragments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scan through fragments without performing any operations (used for benchmarking) — scan_fragments","text":"Length 4 vector fragment count, sums chr, starts, ends","code":""},{"path":"https://bnprks.github.io/BPCells/reference/selectRegions.html","id":null,"dir":"Reference","previous_headings":"","what":"Select fragments overlapping (or not overlapping) selected regions — selectRegions","title":"Select fragments overlapping (or not overlapping) selected regions — selectRegions","text":"Select fragments overlapping (overlapping) selected regions","code":""},{"path":"https://bnprks.github.io/BPCells/reference/selectRegions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select fragments overlapping (or not overlapping) selected regions — selectRegions","text":"","code":"selectRegions(   fragments,   ranges,   invert_selection = FALSE,   zero_based_coords = !is(ranges, \"GRanges\") )"},{"path":"https://bnprks.github.io/BPCells/reference/selectRegions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select fragments overlapping (or not overlapping) selected regions — selectRegions","text":"fragments Input fragments object. ranges GRanges object ranges overlap, list/data frame columns chr, start, & end. Must sorted order (chr, end, start) chromosomes ordered according chromosome names fragments. invert_selection TRUE, select fragments overlapping selected regions instead fragments overlapping selected regions. zero_based_coords Whether convert ranges 1-based end-inclusive coordinate system 0-based end-exclusive coordinate system. Defaults true GRanges false formats (see http://genome.ucsc.edu/blog/-ucsc-genome-browser-coordinate-counting-systems/)","code":""},{"path":"https://bnprks.github.io/BPCells/reference/selectRegions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select fragments overlapping (or not overlapping) selected regions — selectRegions","text":"Fragments object filtered according selected regions","code":""},{"path":"https://bnprks.github.io/BPCells/reference/select_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Select cells for subsetting or translating cells IDs in a fragments object — select_cells","title":"Select cells for subsetting or translating cells IDs in a fragments object — select_cells","text":"Select cells subsetting translating cells IDs fragments object","code":""},{"path":"https://bnprks.github.io/BPCells/reference/select_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select cells for subsetting or translating cells IDs in a fragments object — select_cells","text":"","code":"select_cells(fragments, cell_selection)"},{"path":"https://bnprks.github.io/BPCells/reference/select_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select cells for subsetting or translating cells IDs in a fragments object — select_cells","text":"fragments Input fragments object cell_selection List chromosme IDs (numeric), names (character). output cell ID n`` taken input cell ID/name cell_selectionn`.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/select_chromosomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Select chromosmes for subsetting or translating chromosome IDs in a fragments object — select_chromosomes","title":"Select chromosmes for subsetting or translating chromosome IDs in a fragments object — select_chromosomes","text":"Select chromosmes subsetting translating chromosome IDs fragments object","code":""},{"path":"https://bnprks.github.io/BPCells/reference/select_chromosomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select chromosmes for subsetting or translating chromosome IDs in a fragments object — select_chromosomes","text":"","code":"select_chromosomes(fragments, chromosome_selection)"},{"path":"https://bnprks.github.io/BPCells/reference/select_chromosomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select chromosmes for subsetting or translating chromosome IDs in a fragments object — select_chromosomes","text":"fragments Input fragments object chromosome_selection List chromosme IDs (numeric), names (character). output chromosome ID n taken input fragments chromosome ID/name chromosome_selectionn.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/select_regions.html","id":null,"dir":"Reference","previous_headings":"","what":"Select fragments overlapping (or not overlapping) selected regions — select_regions","title":"Select fragments overlapping (or not overlapping) selected regions — select_regions","text":"Select fragments overlapping (overlapping) selected regions","code":""},{"path":"https://bnprks.github.io/BPCells/reference/select_regions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select fragments overlapping (or not overlapping) selected regions — select_regions","text":"","code":"select_regions(   fragments,   ranges,   invert_selection = FALSE,   zero_based_coords = !is(ranges, \"GRanges\") )"},{"path":"https://bnprks.github.io/BPCells/reference/select_regions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select fragments overlapping (or not overlapping) selected regions — select_regions","text":"fragments Input fragments object. ranges GRanges object ranges overlap, list/data frame columns chr, start, & end. invert_selection TRUE, select fragments overlapping selected regions instead fragments overlapping selected regions. zero_based_coords Whether convert ranges 1-based end-inclusive coordinate system 0-based end-exclusive coordinate system. Defaults true GRanges false formats (see http://genome.ucsc.edu/blog/-ucsc-genome-browser-coordinate-counting-systems/)","code":""},{"path":"https://bnprks.github.io/BPCells/reference/select_regions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select fragments overlapping (or not overlapping) selected regions — select_regions","text":"Fragments object filtered according selected regions","code":""},{"path":"https://bnprks.github.io/BPCells/reference/shift_fragments.html","id":null,"dir":"Reference","previous_headings":"","what":"Shift start or end coordinates — shift_fragments","title":"Shift start or end coordinates — shift_fragments","text":"Shifts start end fragments fixed amount, can useful correct Tn5 offset.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/shift_fragments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shift start or end coordinates — shift_fragments","text":"","code":"shift_fragments(fragments, shift_start = 0L, shift_end = 0L)"},{"path":"https://bnprks.github.io/BPCells/reference/shift_fragments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shift start or end coordinates — shift_fragments","text":"fragments Input fragments object shift_start many basepairs shift start coords shift_end many basepairs shift end coords","code":""},{"path":"https://bnprks.github.io/BPCells/reference/shift_fragments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shift start or end coordinates — shift_fragments","text":"Shifted fragments object","code":""},{"path":"https://bnprks.github.io/BPCells/reference/shift_fragments.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Shift start or end coordinates — shift_fragments","text":"correct Tn5 offset +/- 4bp since Tn5 cut sites opposite strands offset 9bp. However, +4/-5 bp often applied bed-format files, since end coordinate bed files 1 past last basepair sequenced DNA fragment. results bed-like format except inclusive end coordinates.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/subset_lengths.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset fragments to only include those in a given size range — subset_lengths","title":"Subset fragments to only include those in a given size range — subset_lengths","text":"Subset fragments include given size range","code":""},{"path":"https://bnprks.github.io/BPCells/reference/subset_lengths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset fragments to only include those in a given size range — subset_lengths","text":"","code":"subset_lengths(fragments, min_len = 0L, max_len = NA_integer_)"},{"path":"https://bnprks.github.io/BPCells/reference/subset_lengths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset fragments to only include those in a given size range — subset_lengths","text":"fragments Input fragments object min_len Minimum bases fragment (inclusive) max_len Maximum bases fragment (inclusive)","code":""},{"path":"https://bnprks.github.io/BPCells/reference/subset_lengths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset fragments to only include those in a given size range — subset_lengths","text":"Fragments object","code":""},{"path":"https://bnprks.github.io/BPCells/reference/subset_lengths.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Subset fragments to only include those in a given size range — subset_lengths","text":"Fragment length calculated end-start","code":""},{"path":"https://bnprks.github.io/BPCells/reference/tileMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate ranges x cells tile overlap matrix — tileMatrix","title":"Calculate ranges x cells tile overlap matrix — tileMatrix","text":"Calculate ranges x cells tile overlap matrix","code":""},{"path":"https://bnprks.github.io/BPCells/reference/tileMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate ranges x cells tile overlap matrix — tileMatrix","text":"","code":"tileMatrix(   fragments,   ranges,   zero_based_coords = !is(ranges, \"GRanges\"),   explicit_tile_names = FALSE )"},{"path":"https://bnprks.github.io/BPCells/reference/tileMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate ranges x cells tile overlap matrix — tileMatrix","text":"fragments Input fragments object ranges GRanges object ranges overlap including metadata column tile_width, list/data frame columns chr, start, end, tile_width. Must non-overlapping sorted (chr, start), chromosomes ordered according chromosome names fragments zero_based_coords Whether convert ranges 1-based end-inclusive coordinate system 0-based end-exclusive coordinate system. Defaults true GRanges false formats (see http://genome.ucsc.edu/blog/-ucsc-genome-browser-coordinate-counting-systems/) explicit_tile_names Boolean whether add rownames output matrix format e.g chr1:500-1000, start end coords given 0-based coordinate system. whole-genome Tile matrices names take ~5 seconds generate take 400MB memory. Note either way, tile names written matrix saved.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/tileMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate ranges x cells tile overlap matrix — tileMatrix","text":"Iterable matrix object dimension ranges x cells. saved, column names format chr1:500-1000, start end coords given 0-based coordinate system.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/tileMatrix.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate ranges x cells tile overlap matrix — tileMatrix","text":"calculating matrix directly fragments tsv, necessary first call select_chromosomes order provide ordering chromosomes expect reading tsv.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/tile_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate ranges x cells tile overlap matrix — tile_matrix","title":"Calculate ranges x cells tile overlap matrix — tile_matrix","text":"Calculate ranges x cells tile overlap matrix","code":""},{"path":"https://bnprks.github.io/BPCells/reference/tile_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate ranges x cells tile overlap matrix — tile_matrix","text":"","code":"tile_matrix(   fragments,   ranges,   zero_based_coords = !is(ranges, \"GRanges\"),   explicit_tile_names = FALSE )"},{"path":"https://bnprks.github.io/BPCells/reference/tile_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate ranges x cells tile overlap matrix — tile_matrix","text":"fragments Input fragments object ranges GRanges object ranges overlap including metadata column tile_width, list/data frame columns chr, start, end, tile_width. Must non-overlapping sorted (chr, start), chromosomes ordered according chromosome names fragments zero_based_coords Whether convert ranges 1-based end-inclusive coordinate system 0-based end-exclusive coordinate system. Defaults true GRanges false formats (see http://genome.ucsc.edu/blog/-ucsc-genome-browser-coordinate-counting-systems/) explicit_tile_names Boolean whether add rownames output matrix format e.g chr1:500-1000, start end coords given 0-based coordinate system. whole-genome Tile matrices names take ~5 seconds generate take 400MB memory. Note either way, tile names written matrix saved.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/tile_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate ranges x cells tile overlap matrix — tile_matrix","text":"Iterable matrix object dimension ranges x cells. saved, column names format chr1:500-1000, start end coords given 0-based coordinate system.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/tile_matrix.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate ranges x cells tile overlap matrix — tile_matrix","text":"calculating matrix directly fragments tsv, necessary first call select_chromosomes order provide ordering chromosomes expect reading tsv.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/tile_ranges.html","id":null,"dir":"Reference","previous_headings":"","what":"Get ranges corresponding to selected tiles of a tile matrix — tile_ranges","title":"Get ranges corresponding to selected tiles of a tile matrix — tile_ranges","text":"Get ranges corresponding selected tiles tile matrix","code":""},{"path":"https://bnprks.github.io/BPCells/reference/tile_ranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get ranges corresponding to selected tiles of a tile matrix — tile_ranges","text":"","code":"tile_ranges(tile_matrix, selection)"},{"path":"https://bnprks.github.io/BPCells/reference/trackplot_bulk.html","id":null,"dir":"Reference","previous_headings":"","what":"Pseudobulk trackplot — trackplot_bulk","title":"Pseudobulk trackplot — trackplot_bulk","text":"Plot pseudobulk genome track, showing number fragment insertions across region.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/trackplot_bulk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pseudobulk trackplot — trackplot_bulk","text":"","code":"trackplot_bulk(   fragments,   region,   groups,   cell_read_counts,   group_order = NULL,   bins = 200,   clip_quantile = 0.999,   colors = discrete_palette(\"stallion\"),   legend_label = \"group\",   zero_based_coords = !is(region, \"GRanges\"),   return_data = FALSE,   return_plot_list = FALSE,   apply_styling = TRUE )"},{"path":"https://bnprks.github.io/BPCells/reference/trackplot_bulk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pseudobulk trackplot — trackplot_bulk","text":"fragments Fragments object region GRanges length 1 region plot, list/data.frame one entry chr, start, end. See gene_region() genomic-ranges details groups Vector one entry per cell, specifying cell's group cell_read_counts Numeric vector read counts cell (used normalization) group_order Optional vector listing ordering groups bins Number bins plot across region clip_quantile (optional) Quantile values clipping y-axis limits. Default 0.999 crop just extreme outliers across region. NULL disable clipping colors Character vector color values (optionally named group) legend_label Custom label put legend zero_based_coords Whether convert ranges 1-based end-inclusive coordinate system 0-based end-exclusive coordinate system. Defaults true GRanges false formats (see http://genome.ucsc.edu/blog/-ucsc-genome-browser-coordinate-counting-systems/) return_data true, return data just plotting rather plot. return_plot_list TRUE, return multiple plots list, rather single plot combined using patchwork::wrap_plots() apply_styling false, return plot without pretty styling applied","code":""},{"path":"https://bnprks.github.io/BPCells/reference/trackplot_bulk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pseudobulk trackplot — trackplot_bulk","text":"Returns combined plot pseudobulk genome tracks. compatability draw_trackplot_grid()``, extra attribute $patches$labelswill added specify labels track. Ifreturn_dataorreturn_plot_listisTRUE`, return value modified accordingly.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/trackplot_gene.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot transcript models — trackplot_gene","title":"Plot transcript models — trackplot_gene","text":"Plot transcript models","code":""},{"path":"https://bnprks.github.io/BPCells/reference/trackplot_gene.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot transcript models — trackplot_gene","text":"","code":"trackplot_gene(   transcripts,   region,   exon_size = 3,   gene_size = 1,   label_size = 3,   return_data = FALSE )"},{"path":"https://bnprks.github.io/BPCells/reference/trackplot_gene.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot transcript models — trackplot_gene","text":"transcripts GRanges, list, data.frame transcript features plot. Required attributes : chr, start, end: genomic position strand: \"+\"/\"-\" TRUE/FALSE positive negative strand feature (entries marked \"transcript\" \"exon\" considered) transcript_id gene_name See genomic-ranges details region GRanges length 1 region plot, list/data.frame one entry chr, start, end. See gene_region() genomic-ranges details exon_size size exon lines label_size size transcript labels return_data true, return data just plotting rather plot. labels Character vector labels item transcripts. NA items labeled transcript_size size transcript lines","code":""},{"path":"https://bnprks.github.io/BPCells/reference/trackplot_gene.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot transcript models — trackplot_gene","text":"Plot gene locations","code":""},{"path":"https://bnprks.github.io/BPCells/reference/transpose_storage_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Transpose the storage order for a matrix — transpose_storage_order","title":"Transpose the storage order for a matrix — transpose_storage_order","text":"Transpose storage order matrix","code":""},{"path":"https://bnprks.github.io/BPCells/reference/transpose_storage_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transpose the storage order for a matrix — transpose_storage_order","text":"","code":"transpose_storage_order(   matrix,   outdir = tempfile(\"transpose\"),   tmpdir = tempdir(),   load_bytes = 4194304L,   sort_bytes = 1073741824L )"},{"path":"https://bnprks.github.io/BPCells/reference/transpose_storage_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transpose the storage order for a matrix — transpose_storage_order","text":"matrix Input matrix outdir Directory store output tmpdir Temporary directory use intermediate storage load_bytes minimum contiguous load size merge sort passes sort_bytes amount memory allocate re-sorting chunks entries","code":""},{"path":"https://bnprks.github.io/BPCells/reference/transpose_storage_order.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transpose the storage order for a matrix — transpose_storage_order","text":"MatrixDir object copy input matrix, storage order flipped","code":""},{"path":"https://bnprks.github.io/BPCells/reference/transpose_storage_order.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transpose the storage order for a matrix — transpose_storage_order","text":"re-sorts entries matrix change storage order row-major col-major. large matrices, can slow -- around 2 minutes transpose 500k cell RNA-seq matrix default load_bytes (4MiB) sort_bytes (1GiB) parameters allow ~85GB data sorted two passes data, ~7.3TB data sorted three passes data.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/wrapFragments.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap an inner XPtrList with an outer externalptr object (Rcpp::XPtr) — wrapFragments","title":"Wrap an inner XPtrList with an outer externalptr object (Rcpp::XPtr) — wrapFragments","text":"also track type current pointer provide little safety converting C++. WARNING: Always make sure pass correct inner object, passed chain pointers broken C++ objects freed random GC still using . pass inner=new(\"XPtrList\") C++ object wrapping fragments/matrices","code":""},{"path":"https://bnprks.github.io/BPCells/reference/wrapFragments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap an inner XPtrList with an outer externalptr object (Rcpp::XPtr) — wrapFragments","text":"","code":"wrapFragments(outer, inner)"},{"path":"https://bnprks.github.io/BPCells/reference/wrapMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct an S4 matrix object wrapping another matrix object — wrapMatrix","title":"Construct an S4 matrix object wrapping another matrix object — wrapMatrix","text":"Helps avoid duplicate storage dimnames","code":""},{"path":"https://bnprks.github.io/BPCells/reference/wrapMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct an S4 matrix object wrapping another matrix object — wrapMatrix","text":"","code":"wrapMatrix(class, m, ...)"},{"path":"https://bnprks.github.io/BPCells/reference/write_fragments_10x.html","id":null,"dir":"Reference","previous_headings":"","what":"Write to a 10x fragments file — write_fragments_10x","title":"Write to a 10x fragments file — write_fragments_10x","text":"Write 10x fragments file","code":""},{"path":"https://bnprks.github.io/BPCells/reference/write_fragments_10x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write to a 10x fragments file — write_fragments_10x","text":"","code":"write_fragments_10x(   fragments,   path,   end_inclusive = TRUE,   append_5th_column = FALSE )"},{"path":"https://bnprks.github.io/BPCells/reference/write_fragments_10x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write to a 10x fragments file — write_fragments_10x","text":"fragments Input fragments object path Path 10x fragments file end_inclusive Whether end coordinate bed inclusive -- .e. insertion end coordinate rather base end coordinate. 10x default, though quite standard bed file format. append_5th_column Whether include 5th column 0 compatibility 10x fragment file outputs (defaults 4 columns chr,start,end,cell)","code":""},{"path":"https://bnprks.github.io/BPCells/reference/write_fragments_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a fragments object in binary files within a directory. — write_fragments_dir","title":"Make a fragments object in binary files within a directory. — write_fragments_dir","text":"Make fragments object binary files within directory.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/write_fragments_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a fragments object in binary files within a directory. — write_fragments_dir","text":"","code":"write_fragments_dir(fragments, dir, compress = TRUE, buffer_size = 1024L)"},{"path":"https://bnprks.github.io/BPCells/reference/write_fragments_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a fragments object in binary files within a directory. — write_fragments_dir","text":"fragments Input fragments object dir Directory save data compress Whether compress data. compression, memory usage half size gzip-compressed 10x fragments file holding data. Without compression memory usage can 10-20% larger. buffer_size performance tuning . number items bufferred memory calling writes disk.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/write_fragments_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a fragments object in binary files within a directory. — write_fragments_dir","text":"FragmentsDir object","code":""},{"path":"https://bnprks.github.io/BPCells/reference/write_fragments_hdf5.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a fragments object in an hdf5 file — write_fragments_hdf5","title":"Write a fragments object in an hdf5 file — write_fragments_hdf5","text":"Write fragments object hdf5 file","code":""},{"path":"https://bnprks.github.io/BPCells/reference/write_fragments_hdf5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a fragments object in an hdf5 file — write_fragments_hdf5","text":"","code":"write_fragments_hdf5(   fragments,   path,   group = \"fragments\",   compress = TRUE,   buffer_size = 8192L,   chunk_size = 1024L )"},{"path":"https://bnprks.github.io/BPCells/reference/write_fragments_hdf5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a fragments object in an hdf5 file — write_fragments_hdf5","text":"fragments Input fragments object path Path hdf5 file disk group group within hdf5 file write data . writing existing hdf5 file group must already use compress Whether compress data. compression, memory usage half size gzip-compressed 10x fragments file holding data. Without compression memory usage can 10-20% larger. buffer_size performance tuning . number items bufferred memory calling writes disk. chunk_size performance tuning . chunk size used HDF5 array storage.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/write_fragments_hdf5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a fragments object in an hdf5 file — write_fragments_hdf5","text":"FragmentsHDF5 object","code":""},{"path":"https://bnprks.github.io/BPCells/reference/write_fragments_memory.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a fragments object in memory. — write_fragments_memory","title":"Make a fragments object in memory. — write_fragments_memory","text":"Make fragments object memory.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/write_fragments_memory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a fragments object in memory. — write_fragments_memory","text":"","code":"write_fragments_memory(fragments, compress = TRUE)"},{"path":"https://bnprks.github.io/BPCells/reference/write_fragments_memory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a fragments object in memory. — write_fragments_memory","text":"fragments Input fragments object compress Whether compress data. compression, memory usage half size gzip-compressed 10x fragments file holding data. Without compression memory usage can 10-20% larger.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/write_fragments_memory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a fragments object in memory. — write_fragments_memory","text":"MemFragments object","code":""},{"path":"https://bnprks.github.io/BPCells/reference/write_matrix_10x_hdf5.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a matrix to a 10x-compatible hdf5 feature matrix file — write_matrix_10x_hdf5","title":"Write a matrix to a 10x-compatible hdf5 feature matrix file — write_matrix_10x_hdf5","text":"Write matrix 10x-compatible hdf5 feature matrix file","code":""},{"path":"https://bnprks.github.io/BPCells/reference/write_matrix_10x_hdf5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a matrix to a 10x-compatible hdf5 feature matrix file — write_matrix_10x_hdf5","text":"","code":"write_matrix_10x_hdf5(   mat,   path,   barcodes = colnames(mat),   feature_ids = rownames(mat),   feature_names = rownames(mat),   feature_types = \"Gene Expression\",   feature_metadata = list(),   buffer_size = 16384L,   chunk_size = 1024L )"},{"path":"https://bnprks.github.io/BPCells/reference/write_matrix_10x_hdf5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a matrix to a 10x-compatible hdf5 feature matrix file — write_matrix_10x_hdf5","text":"mat IterableMatrix path Path hdf5 file disk barcodes Vector names cells feature_ids Vector IDs features feature_names Vector names features feature_metadata Named list additional metadata vectors store feature buffer_size performance tuning . number items buffered memory calling writes disk. chunk_size performance tuning . chunk size used HDF5 array storage. feature_type String vector feature types","code":""},{"path":"https://bnprks.github.io/BPCells/reference/write_matrix_10x_hdf5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a matrix to a 10x-compatible hdf5 feature matrix file — write_matrix_10x_hdf5","text":"IterableMatrix contents output","code":""},{"path":"https://bnprks.github.io/BPCells/reference/write_matrix_10x_hdf5.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write a matrix to a 10x-compatible hdf5 feature matrix file — write_matrix_10x_hdf5","text":"Input matrices must column-major storage order, rownames colnames set, names must provided relevant metadata parameters. metadata parameters read default BPCells, possible export use tools.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/write_matrix_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Make an integer sparse matrix object in binary files within a directory — write_matrix_dir","title":"Make an integer sparse matrix object in binary files within a directory — write_matrix_dir","text":"Make integer sparse matrix object binary files within directory","code":""},{"path":"https://bnprks.github.io/BPCells/reference/write_matrix_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make an integer sparse matrix object in binary files within a directory — write_matrix_dir","text":"","code":"write_matrix_dir(mat, dir, compress = TRUE, buffer_size = 8192L)"},{"path":"https://bnprks.github.io/BPCells/reference/write_matrix_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make an integer sparse matrix object in binary files within a directory — write_matrix_dir","text":"dir Directory save data compress Whether compress data. buffer_size performance tuning . number items buffered memory calling writes disk.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/write_matrix_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make an integer sparse matrix object in binary files within a directory — write_matrix_dir","text":"MatrixDir object","code":""},{"path":"https://bnprks.github.io/BPCells/reference/write_matrix_dir.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make an integer sparse matrix object in binary files within a directory — write_matrix_dir","text":"function convert row major storage orders column major, usually require 2 extra passes data. typical RNA counts matrices, unsigned integer matrices (type uint32_t), function result 6-8x less space R dgCMatrix, 4-6x smaller scipy csc_matrix. compression effective count values matrix small, rows matrix sorted rowMeans. tests RNA-seq data optimal ordering save 40% storage space. non-integer data row indices compressed, values space savings smaller. Note: function perform automatic conversions non-negative integer matrices, use function convert_matrix_type_uint32_t first high-efficiency compression desired.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/write_matrix_hdf5.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a sparse integer matrix to an hdf5 file — write_matrix_hdf5","title":"Write a sparse integer matrix to an hdf5 file — write_matrix_hdf5","text":"Write sparse integer matrix hdf5 file","code":""},{"path":"https://bnprks.github.io/BPCells/reference/write_matrix_hdf5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a sparse integer matrix to an hdf5 file — write_matrix_hdf5","text":"","code":"write_matrix_hdf5(   mat,   path,   group,   compress = TRUE,   buffer_size = 8192L,   chunk_size = 1024L )"},{"path":"https://bnprks.github.io/BPCells/reference/write_matrix_hdf5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a sparse integer matrix to an hdf5 file — write_matrix_hdf5","text":"path Path hdf5 file disk group group within hdf5 file write data . writing existing hdf5 file group must already use compress Whether compress data. compression, memory usage half size gzip-compressed 10x fragments file holding data. Without compression memory usage can 10-20% larger. buffer_size performance tuning . number items bufferred memory calling writes disk. chunk_size performance tuning . chunk size used HDF5 array storage.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/write_matrix_hdf5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a sparse integer matrix to an hdf5 file — write_matrix_hdf5","text":"MatrixH5 object","code":""},{"path":"https://bnprks.github.io/BPCells/reference/write_matrix_hdf5.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write a sparse integer matrix to an hdf5 file — write_matrix_hdf5","text":"function convert row major storage orders column major, usually require 2 extra passes data. typical RNA counts matrices, unsigned integer matrices (type uint32_t), function result 6-8x less space R dgCMatrix, 4-6x smaller scipy csc_matrix. compression effective count values matrix small, rows matrix sorted rowMeans. tests RNA-seq data optimal ordering save 40% storage space. non-integer data row indices compressed, values space savings smaller. Note: function perform automatic conversions non-negative integer matrices, use function convert_matrix_type_uint32_t first high-efficiency compression desired.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/write_matrix_memory.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a sparse matrix object to memory. — write_matrix_memory","title":"Write a sparse matrix object to memory. — write_matrix_memory","text":"Write sparse matrix object memory.","code":""},{"path":"https://bnprks.github.io/BPCells/reference/write_matrix_memory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a sparse matrix object to memory. — write_matrix_memory","text":"","code":"write_matrix_memory(mat, compress = TRUE)"},{"path":"https://bnprks.github.io/BPCells/reference/write_matrix_memory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a sparse matrix object to memory. — write_matrix_memory","text":"compress Whether compress data. matrix Input matrix, either IterableMatrix dgCMatrix","code":""},{"path":"https://bnprks.github.io/BPCells/reference/write_matrix_memory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a sparse matrix object to memory. — write_matrix_memory","text":"IterableMatrix object","code":""},{"path":"https://bnprks.github.io/BPCells/reference/write_matrix_memory.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write a sparse matrix object to memory. — write_matrix_memory","text":"function convert row major storage orders column major, usually require 2 extra passes data. typical RNA counts matrices, unsigned integer matrices (type uint32_t), function result 6-8x less space R dgCMatrix, 4-6x smaller scipy csc_matrix. compression effective count values matrix small, rows matrix sorted rowMeans. tests RNA-seq data optimal ordering save 40% storage space. non-integer data row indices compressed, values space savings smaller. Note: function perform automatic conversions non-negative integer matrices, use function convert_matrix_type_uint32_t first high-efficiency compression desired.","code":""}]
